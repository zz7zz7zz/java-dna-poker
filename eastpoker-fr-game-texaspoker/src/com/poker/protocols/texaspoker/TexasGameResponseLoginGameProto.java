// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/com/poker/protocols/texaspoker/proto/TexasGameResponseLoginGame.proto

package com.poker.protocols.texaspoker;

public final class TexasGameResponseLoginGameProto {
  private TexasGameResponseLoginGameProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TexasGameResponseLoginGameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.poker.protocols.texaspoker.proto.TexasGameResponseLoginGame)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *桌子配置
     * </pre>
     *
     * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
     */
    boolean hasConfig();
    /**
     * <pre>
     *桌子配置
     * </pre>
     *
     * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
     */
    com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig getConfig();
    /**
     * <pre>
     *桌子配置
     * </pre>
     *
     * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
     */
    com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfigOrBuilder getConfigOrBuilder();

    /**
     * <code>int32 seatId = 2;</code>
     */
    int getSeatId();

    /**
     * <code>int64 chip_total = 3;</code>
     */
    long getChipTotal();

    /**
     * <code>int64 chip = 4;</code>
     */
    long getChip();

    /**
     * <code>int32 play_status = 5;</code>
     */
    int getPlayStatus();

    /**
     * <pre>
     *桌子上的用户  
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
     */
    java.util.List<com.poker.protocols.texaspoker.GameUserProto.GameUser> 
        getUsersList();
    /**
     * <pre>
     *桌子上的用户  
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
     */
    com.poker.protocols.texaspoker.GameUserProto.GameUser getUsers(int index);
    /**
     * <pre>
     *桌子上的用户  
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
     */
    int getUsersCount();
    /**
     * <pre>
     *桌子上的用户  
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
     */
    java.util.List<? extends com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder> 
        getUsersOrBuilderList();
    /**
     * <pre>
     *桌子上的用户  
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
     */
    com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder getUsersOrBuilder(
        int index);

    /**
     * <pre>
     *旁观用户
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
     */
    java.util.List<com.poker.protocols.texaspoker.GameUserProto.GameUser> 
        getOnLookerList();
    /**
     * <pre>
     *旁观用户
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
     */
    com.poker.protocols.texaspoker.GameUserProto.GameUser getOnLooker(int index);
    /**
     * <pre>
     *旁观用户
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
     */
    int getOnLookerCount();
    /**
     * <pre>
     *旁观用户
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
     */
    java.util.List<? extends com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder> 
        getOnLookerOrBuilderList();
    /**
     * <pre>
     *旁观用户
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
     */
    com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder getOnLookerOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.poker.protocols.texaspoker.proto.TexasGameResponseLoginGame}
   */
  public  static final class TexasGameResponseLoginGame extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.poker.protocols.texaspoker.proto.TexasGameResponseLoginGame)
      TexasGameResponseLoginGameOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TexasGameResponseLoginGame.newBuilder() to construct.
    private TexasGameResponseLoginGame(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TexasGameResponseLoginGame() {
      seatId_ = 0;
      chipTotal_ = 0L;
      chip_ = 0L;
      playStatus_ = 0;
      users_ = java.util.Collections.emptyList();
      onLooker_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TexasGameResponseLoginGame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig.Builder subBuilder = null;
              if (config_ != null) {
                subBuilder = config_.toBuilder();
              }
              config_ = input.readMessage(com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(config_);
                config_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              seatId_ = input.readInt32();
              break;
            }
            case 24: {

              chipTotal_ = input.readInt64();
              break;
            }
            case 32: {

              chip_ = input.readInt64();
              break;
            }
            case 40: {

              playStatus_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                users_ = new java.util.ArrayList<com.poker.protocols.texaspoker.GameUserProto.GameUser>();
                mutable_bitField0_ |= 0x00000020;
              }
              users_.add(
                  input.readMessage(com.poker.protocols.texaspoker.GameUserProto.GameUser.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                onLooker_ = new java.util.ArrayList<com.poker.protocols.texaspoker.GameUserProto.GameUser>();
                mutable_bitField0_ |= 0x00000040;
              }
              onLooker_.add(
                  input.readMessage(com.poker.protocols.texaspoker.GameUserProto.GameUser.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          users_ = java.util.Collections.unmodifiableList(users_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          onLooker_ = java.util.Collections.unmodifiableList(onLooker_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.internal_static_com_poker_protocols_texaspoker_proto_TexasGameResponseLoginGame_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.internal_static_com_poker_protocols_texaspoker_proto_TexasGameResponseLoginGame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame.class, com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame.Builder.class);
    }

    private int bitField0_;
    public static final int CONFIG_FIELD_NUMBER = 1;
    private com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig config_;
    /**
     * <pre>
     *桌子配置
     * </pre>
     *
     * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
     */
    public boolean hasConfig() {
      return config_ != null;
    }
    /**
     * <pre>
     *桌子配置
     * </pre>
     *
     * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
     */
    public com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig getConfig() {
      return config_ == null ? com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig.getDefaultInstance() : config_;
    }
    /**
     * <pre>
     *桌子配置
     * </pre>
     *
     * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
     */
    public com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfigOrBuilder getConfigOrBuilder() {
      return getConfig();
    }

    public static final int SEATID_FIELD_NUMBER = 2;
    private int seatId_;
    /**
     * <code>int32 seatId = 2;</code>
     */
    public int getSeatId() {
      return seatId_;
    }

    public static final int CHIP_TOTAL_FIELD_NUMBER = 3;
    private long chipTotal_;
    /**
     * <code>int64 chip_total = 3;</code>
     */
    public long getChipTotal() {
      return chipTotal_;
    }

    public static final int CHIP_FIELD_NUMBER = 4;
    private long chip_;
    /**
     * <code>int64 chip = 4;</code>
     */
    public long getChip() {
      return chip_;
    }

    public static final int PLAY_STATUS_FIELD_NUMBER = 5;
    private int playStatus_;
    /**
     * <code>int32 play_status = 5;</code>
     */
    public int getPlayStatus() {
      return playStatus_;
    }

    public static final int USERS_FIELD_NUMBER = 6;
    private java.util.List<com.poker.protocols.texaspoker.GameUserProto.GameUser> users_;
    /**
     * <pre>
     *桌子上的用户  
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
     */
    public java.util.List<com.poker.protocols.texaspoker.GameUserProto.GameUser> getUsersList() {
      return users_;
    }
    /**
     * <pre>
     *桌子上的用户  
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
     */
    public java.util.List<? extends com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder> 
        getUsersOrBuilderList() {
      return users_;
    }
    /**
     * <pre>
     *桌子上的用户  
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
     */
    public int getUsersCount() {
      return users_.size();
    }
    /**
     * <pre>
     *桌子上的用户  
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
     */
    public com.poker.protocols.texaspoker.GameUserProto.GameUser getUsers(int index) {
      return users_.get(index);
    }
    /**
     * <pre>
     *桌子上的用户  
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
     */
    public com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder getUsersOrBuilder(
        int index) {
      return users_.get(index);
    }

    public static final int ONLOOKER_FIELD_NUMBER = 7;
    private java.util.List<com.poker.protocols.texaspoker.GameUserProto.GameUser> onLooker_;
    /**
     * <pre>
     *旁观用户
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
     */
    public java.util.List<com.poker.protocols.texaspoker.GameUserProto.GameUser> getOnLookerList() {
      return onLooker_;
    }
    /**
     * <pre>
     *旁观用户
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
     */
    public java.util.List<? extends com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder> 
        getOnLookerOrBuilderList() {
      return onLooker_;
    }
    /**
     * <pre>
     *旁观用户
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
     */
    public int getOnLookerCount() {
      return onLooker_.size();
    }
    /**
     * <pre>
     *旁观用户
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
     */
    public com.poker.protocols.texaspoker.GameUserProto.GameUser getOnLooker(int index) {
      return onLooker_.get(index);
    }
    /**
     * <pre>
     *旁观用户
     * </pre>
     *
     * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
     */
    public com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder getOnLookerOrBuilder(
        int index) {
      return onLooker_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (config_ != null) {
        output.writeMessage(1, getConfig());
      }
      if (seatId_ != 0) {
        output.writeInt32(2, seatId_);
      }
      if (chipTotal_ != 0L) {
        output.writeInt64(3, chipTotal_);
      }
      if (chip_ != 0L) {
        output.writeInt64(4, chip_);
      }
      if (playStatus_ != 0) {
        output.writeInt32(5, playStatus_);
      }
      for (int i = 0; i < users_.size(); i++) {
        output.writeMessage(6, users_.get(i));
      }
      for (int i = 0; i < onLooker_.size(); i++) {
        output.writeMessage(7, onLooker_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (config_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getConfig());
      }
      if (seatId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seatId_);
      }
      if (chipTotal_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, chipTotal_);
      }
      if (chip_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, chip_);
      }
      if (playStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, playStatus_);
      }
      for (int i = 0; i < users_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, users_.get(i));
      }
      for (int i = 0; i < onLooker_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, onLooker_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame)) {
        return super.equals(obj);
      }
      com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame other = (com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame) obj;

      boolean result = true;
      result = result && (hasConfig() == other.hasConfig());
      if (hasConfig()) {
        result = result && getConfig()
            .equals(other.getConfig());
      }
      result = result && (getSeatId()
          == other.getSeatId());
      result = result && (getChipTotal()
          == other.getChipTotal());
      result = result && (getChip()
          == other.getChip());
      result = result && (getPlayStatus()
          == other.getPlayStatus());
      result = result && getUsersList()
          .equals(other.getUsersList());
      result = result && getOnLookerList()
          .equals(other.getOnLookerList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      hash = (37 * hash) + SEATID_FIELD_NUMBER;
      hash = (53 * hash) + getSeatId();
      hash = (37 * hash) + CHIP_TOTAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getChipTotal());
      hash = (37 * hash) + CHIP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getChip());
      hash = (37 * hash) + PLAY_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getPlayStatus();
      if (getUsersCount() > 0) {
        hash = (37 * hash) + USERS_FIELD_NUMBER;
        hash = (53 * hash) + getUsersList().hashCode();
      }
      if (getOnLookerCount() > 0) {
        hash = (37 * hash) + ONLOOKER_FIELD_NUMBER;
        hash = (53 * hash) + getOnLookerList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.poker.protocols.texaspoker.proto.TexasGameResponseLoginGame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.poker.protocols.texaspoker.proto.TexasGameResponseLoginGame)
        com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.internal_static_com_poker_protocols_texaspoker_proto_TexasGameResponseLoginGame_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.internal_static_com_poker_protocols_texaspoker_proto_TexasGameResponseLoginGame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame.class, com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame.Builder.class);
      }

      // Construct using com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getUsersFieldBuilder();
          getOnLookerFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (configBuilder_ == null) {
          config_ = null;
        } else {
          config_ = null;
          configBuilder_ = null;
        }
        seatId_ = 0;

        chipTotal_ = 0L;

        chip_ = 0L;

        playStatus_ = 0;

        if (usersBuilder_ == null) {
          users_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          usersBuilder_.clear();
        }
        if (onLookerBuilder_ == null) {
          onLooker_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          onLookerBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.internal_static_com_poker_protocols_texaspoker_proto_TexasGameResponseLoginGame_descriptor;
      }

      public com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame getDefaultInstanceForType() {
        return com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame.getDefaultInstance();
      }

      public com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame build() {
        com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame buildPartial() {
        com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame result = new com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (configBuilder_ == null) {
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        result.seatId_ = seatId_;
        result.chipTotal_ = chipTotal_;
        result.chip_ = chip_;
        result.playStatus_ = playStatus_;
        if (usersBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            users_ = java.util.Collections.unmodifiableList(users_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.users_ = users_;
        } else {
          result.users_ = usersBuilder_.build();
        }
        if (onLookerBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            onLooker_ = java.util.Collections.unmodifiableList(onLooker_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.onLooker_ = onLooker_;
        } else {
          result.onLooker_ = onLookerBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame) {
          return mergeFrom((com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame other) {
        if (other == com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame.getDefaultInstance()) return this;
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        if (other.getSeatId() != 0) {
          setSeatId(other.getSeatId());
        }
        if (other.getChipTotal() != 0L) {
          setChipTotal(other.getChipTotal());
        }
        if (other.getChip() != 0L) {
          setChip(other.getChip());
        }
        if (other.getPlayStatus() != 0) {
          setPlayStatus(other.getPlayStatus());
        }
        if (usersBuilder_ == null) {
          if (!other.users_.isEmpty()) {
            if (users_.isEmpty()) {
              users_ = other.users_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureUsersIsMutable();
              users_.addAll(other.users_);
            }
            onChanged();
          }
        } else {
          if (!other.users_.isEmpty()) {
            if (usersBuilder_.isEmpty()) {
              usersBuilder_.dispose();
              usersBuilder_ = null;
              users_ = other.users_;
              bitField0_ = (bitField0_ & ~0x00000020);
              usersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUsersFieldBuilder() : null;
            } else {
              usersBuilder_.addAllMessages(other.users_);
            }
          }
        }
        if (onLookerBuilder_ == null) {
          if (!other.onLooker_.isEmpty()) {
            if (onLooker_.isEmpty()) {
              onLooker_ = other.onLooker_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureOnLookerIsMutable();
              onLooker_.addAll(other.onLooker_);
            }
            onChanged();
          }
        } else {
          if (!other.onLooker_.isEmpty()) {
            if (onLookerBuilder_.isEmpty()) {
              onLookerBuilder_.dispose();
              onLookerBuilder_ = null;
              onLooker_ = other.onLooker_;
              bitField0_ = (bitField0_ & ~0x00000040);
              onLookerBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOnLookerFieldBuilder() : null;
            } else {
              onLookerBuilder_.addAllMessages(other.onLooker_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig config_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig, com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig.Builder, com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfigOrBuilder> configBuilder_;
      /**
       * <pre>
       *桌子配置
       * </pre>
       *
       * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
       */
      public boolean hasConfig() {
        return configBuilder_ != null || config_ != null;
      }
      /**
       * <pre>
       *桌子配置
       * </pre>
       *
       * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
       */
      public com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *桌子配置
       * </pre>
       *
       * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
       */
      public Builder setConfig(com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
          onChanged();
        } else {
          configBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *桌子配置
       * </pre>
       *
       * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
       */
      public Builder setConfig(
          com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
          onChanged();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *桌子配置
       * </pre>
       *
       * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
       */
      public Builder mergeConfig(com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig value) {
        if (configBuilder_ == null) {
          if (config_ != null) {
            config_ =
              com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig.newBuilder(config_).mergeFrom(value).buildPartial();
          } else {
            config_ = value;
          }
          onChanged();
        } else {
          configBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *桌子配置
       * </pre>
       *
       * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = null;
          onChanged();
        } else {
          config_ = null;
          configBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *桌子配置
       * </pre>
       *
       * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
       */
      public com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig.Builder getConfigBuilder() {
        
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *桌子配置
       * </pre>
       *
       * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
       */
      public com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfigOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig.getDefaultInstance() : config_;
        }
      }
      /**
       * <pre>
       *桌子配置
       * </pre>
       *
       * <code>.com.poker.protocols.texaspoker.proto.TexasGameConfig config = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig, com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig.Builder, com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfigOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig, com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfig.Builder, com.poker.protocols.texaspoker.TexasGameConfigProto.TexasGameConfigOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }

      private int seatId_ ;
      /**
       * <code>int32 seatId = 2;</code>
       */
      public int getSeatId() {
        return seatId_;
      }
      /**
       * <code>int32 seatId = 2;</code>
       */
      public Builder setSeatId(int value) {
        
        seatId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 seatId = 2;</code>
       */
      public Builder clearSeatId() {
        
        seatId_ = 0;
        onChanged();
        return this;
      }

      private long chipTotal_ ;
      /**
       * <code>int64 chip_total = 3;</code>
       */
      public long getChipTotal() {
        return chipTotal_;
      }
      /**
       * <code>int64 chip_total = 3;</code>
       */
      public Builder setChipTotal(long value) {
        
        chipTotal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 chip_total = 3;</code>
       */
      public Builder clearChipTotal() {
        
        chipTotal_ = 0L;
        onChanged();
        return this;
      }

      private long chip_ ;
      /**
       * <code>int64 chip = 4;</code>
       */
      public long getChip() {
        return chip_;
      }
      /**
       * <code>int64 chip = 4;</code>
       */
      public Builder setChip(long value) {
        
        chip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 chip = 4;</code>
       */
      public Builder clearChip() {
        
        chip_ = 0L;
        onChanged();
        return this;
      }

      private int playStatus_ ;
      /**
       * <code>int32 play_status = 5;</code>
       */
      public int getPlayStatus() {
        return playStatus_;
      }
      /**
       * <code>int32 play_status = 5;</code>
       */
      public Builder setPlayStatus(int value) {
        
        playStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 play_status = 5;</code>
       */
      public Builder clearPlayStatus() {
        
        playStatus_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.poker.protocols.texaspoker.GameUserProto.GameUser> users_ =
        java.util.Collections.emptyList();
      private void ensureUsersIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          users_ = new java.util.ArrayList<com.poker.protocols.texaspoker.GameUserProto.GameUser>(users_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.poker.protocols.texaspoker.GameUserProto.GameUser, com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder, com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder> usersBuilder_;

      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public java.util.List<com.poker.protocols.texaspoker.GameUserProto.GameUser> getUsersList() {
        if (usersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(users_);
        } else {
          return usersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public int getUsersCount() {
        if (usersBuilder_ == null) {
          return users_.size();
        } else {
          return usersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public com.poker.protocols.texaspoker.GameUserProto.GameUser getUsers(int index) {
        if (usersBuilder_ == null) {
          return users_.get(index);
        } else {
          return usersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public Builder setUsers(
          int index, com.poker.protocols.texaspoker.GameUserProto.GameUser value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.set(index, value);
          onChanged();
        } else {
          usersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public Builder setUsers(
          int index, com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.set(index, builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public Builder addUsers(com.poker.protocols.texaspoker.GameUserProto.GameUser value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.add(value);
          onChanged();
        } else {
          usersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public Builder addUsers(
          int index, com.poker.protocols.texaspoker.GameUserProto.GameUser value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.add(index, value);
          onChanged();
        } else {
          usersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public Builder addUsers(
          com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.add(builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public Builder addUsers(
          int index, com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.add(index, builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public Builder addAllUsers(
          java.lang.Iterable<? extends com.poker.protocols.texaspoker.GameUserProto.GameUser> values) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, users_);
          onChanged();
        } else {
          usersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public Builder clearUsers() {
        if (usersBuilder_ == null) {
          users_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          usersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public Builder removeUsers(int index) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.remove(index);
          onChanged();
        } else {
          usersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder getUsersBuilder(
          int index) {
        return getUsersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder getUsersOrBuilder(
          int index) {
        if (usersBuilder_ == null) {
          return users_.get(index);  } else {
          return usersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public java.util.List<? extends com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder> 
           getUsersOrBuilderList() {
        if (usersBuilder_ != null) {
          return usersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(users_);
        }
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder addUsersBuilder() {
        return getUsersFieldBuilder().addBuilder(
            com.poker.protocols.texaspoker.GameUserProto.GameUser.getDefaultInstance());
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder addUsersBuilder(
          int index) {
        return getUsersFieldBuilder().addBuilder(
            index, com.poker.protocols.texaspoker.GameUserProto.GameUser.getDefaultInstance());
      }
      /**
       * <pre>
       *桌子上的用户  
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser users = 6;</code>
       */
      public java.util.List<com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder> 
           getUsersBuilderList() {
        return getUsersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.poker.protocols.texaspoker.GameUserProto.GameUser, com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder, com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder> 
          getUsersFieldBuilder() {
        if (usersBuilder_ == null) {
          usersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.poker.protocols.texaspoker.GameUserProto.GameUser, com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder, com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder>(
                  users_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          users_ = null;
        }
        return usersBuilder_;
      }

      private java.util.List<com.poker.protocols.texaspoker.GameUserProto.GameUser> onLooker_ =
        java.util.Collections.emptyList();
      private void ensureOnLookerIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          onLooker_ = new java.util.ArrayList<com.poker.protocols.texaspoker.GameUserProto.GameUser>(onLooker_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.poker.protocols.texaspoker.GameUserProto.GameUser, com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder, com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder> onLookerBuilder_;

      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public java.util.List<com.poker.protocols.texaspoker.GameUserProto.GameUser> getOnLookerList() {
        if (onLookerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(onLooker_);
        } else {
          return onLookerBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public int getOnLookerCount() {
        if (onLookerBuilder_ == null) {
          return onLooker_.size();
        } else {
          return onLookerBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public com.poker.protocols.texaspoker.GameUserProto.GameUser getOnLooker(int index) {
        if (onLookerBuilder_ == null) {
          return onLooker_.get(index);
        } else {
          return onLookerBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public Builder setOnLooker(
          int index, com.poker.protocols.texaspoker.GameUserProto.GameUser value) {
        if (onLookerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOnLookerIsMutable();
          onLooker_.set(index, value);
          onChanged();
        } else {
          onLookerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public Builder setOnLooker(
          int index, com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder builderForValue) {
        if (onLookerBuilder_ == null) {
          ensureOnLookerIsMutable();
          onLooker_.set(index, builderForValue.build());
          onChanged();
        } else {
          onLookerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public Builder addOnLooker(com.poker.protocols.texaspoker.GameUserProto.GameUser value) {
        if (onLookerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOnLookerIsMutable();
          onLooker_.add(value);
          onChanged();
        } else {
          onLookerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public Builder addOnLooker(
          int index, com.poker.protocols.texaspoker.GameUserProto.GameUser value) {
        if (onLookerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOnLookerIsMutable();
          onLooker_.add(index, value);
          onChanged();
        } else {
          onLookerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public Builder addOnLooker(
          com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder builderForValue) {
        if (onLookerBuilder_ == null) {
          ensureOnLookerIsMutable();
          onLooker_.add(builderForValue.build());
          onChanged();
        } else {
          onLookerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public Builder addOnLooker(
          int index, com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder builderForValue) {
        if (onLookerBuilder_ == null) {
          ensureOnLookerIsMutable();
          onLooker_.add(index, builderForValue.build());
          onChanged();
        } else {
          onLookerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public Builder addAllOnLooker(
          java.lang.Iterable<? extends com.poker.protocols.texaspoker.GameUserProto.GameUser> values) {
        if (onLookerBuilder_ == null) {
          ensureOnLookerIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, onLooker_);
          onChanged();
        } else {
          onLookerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public Builder clearOnLooker() {
        if (onLookerBuilder_ == null) {
          onLooker_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          onLookerBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public Builder removeOnLooker(int index) {
        if (onLookerBuilder_ == null) {
          ensureOnLookerIsMutable();
          onLooker_.remove(index);
          onChanged();
        } else {
          onLookerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder getOnLookerBuilder(
          int index) {
        return getOnLookerFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder getOnLookerOrBuilder(
          int index) {
        if (onLookerBuilder_ == null) {
          return onLooker_.get(index);  } else {
          return onLookerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public java.util.List<? extends com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder> 
           getOnLookerOrBuilderList() {
        if (onLookerBuilder_ != null) {
          return onLookerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(onLooker_);
        }
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder addOnLookerBuilder() {
        return getOnLookerFieldBuilder().addBuilder(
            com.poker.protocols.texaspoker.GameUserProto.GameUser.getDefaultInstance());
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder addOnLookerBuilder(
          int index) {
        return getOnLookerFieldBuilder().addBuilder(
            index, com.poker.protocols.texaspoker.GameUserProto.GameUser.getDefaultInstance());
      }
      /**
       * <pre>
       *旁观用户
       * </pre>
       *
       * <code>repeated .com.poker.protocols.texaspoker.proto.GameUser onLooker = 7;</code>
       */
      public java.util.List<com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder> 
           getOnLookerBuilderList() {
        return getOnLookerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.poker.protocols.texaspoker.GameUserProto.GameUser, com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder, com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder> 
          getOnLookerFieldBuilder() {
        if (onLookerBuilder_ == null) {
          onLookerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.poker.protocols.texaspoker.GameUserProto.GameUser, com.poker.protocols.texaspoker.GameUserProto.GameUser.Builder, com.poker.protocols.texaspoker.GameUserProto.GameUserOrBuilder>(
                  onLooker_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          onLooker_ = null;
        }
        return onLookerBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.poker.protocols.texaspoker.proto.TexasGameResponseLoginGame)
    }

    // @@protoc_insertion_point(class_scope:com.poker.protocols.texaspoker.proto.TexasGameResponseLoginGame)
    private static final com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame();
    }

    public static com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TexasGameResponseLoginGame>
        PARSER = new com.google.protobuf.AbstractParser<TexasGameResponseLoginGame>() {
      public TexasGameResponseLoginGame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TexasGameResponseLoginGame(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TexasGameResponseLoginGame> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TexasGameResponseLoginGame> getParserForType() {
      return PARSER;
    }

    public com.poker.protocols.texaspoker.TexasGameResponseLoginGameProto.TexasGameResponseLoginGame getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_poker_protocols_texaspoker_proto_TexasGameResponseLoginGame_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_poker_protocols_texaspoker_proto_TexasGameResponseLoginGame_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nIsrc/com/poker/protocols/texaspoker/pro" +
      "to/TexasGameResponseLoginGame.proto\022$com" +
      ".poker.protocols.texaspoker.proto\0327src/c" +
      "om/poker/protocols/texaspoker/proto/Game" +
      "User.proto\032>src/com/poker/protocols/texa" +
      "spoker/proto/TexasGameConfig.proto\"\253\002\n\032T" +
      "exasGameResponseLoginGame\022E\n\006config\030\001 \001(" +
      "\01325.com.poker.protocols.texaspoker.proto" +
      ".TexasGameConfig\022\016\n\006seatId\030\002 \001(\005\022\022\n\nchip" +
      "_total\030\003 \001(\003\022\014\n\004chip\030\004 \001(\003\022\023\n\013play_statu" +
      "s\030\005 \001(\005\022=\n\005users\030\006 \003(\0132..com.poker.proto" +
      "cols.texaspoker.proto.GameUser\022@\n\010onLook" +
      "er\030\007 \003(\0132..com.poker.protocols.texaspoke" +
      "r.proto.GameUserBA\n\036com.poker.protocols." +
      "texaspokerB\037TexasGameResponseLoginGamePr" +
      "otob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.poker.protocols.texaspoker.GameUserProto.getDescriptor(),
          com.poker.protocols.texaspoker.TexasGameConfigProto.getDescriptor(),
        }, assigner);
    internal_static_com_poker_protocols_texaspoker_proto_TexasGameResponseLoginGame_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_poker_protocols_texaspoker_proto_TexasGameResponseLoginGame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_poker_protocols_texaspoker_proto_TexasGameResponseLoginGame_descriptor,
        new java.lang.String[] { "Config", "SeatId", "ChipTotal", "Chip", "PlayStatus", "Users", "OnLooker", });
    com.poker.protocols.texaspoker.GameUserProto.getDescriptor();
    com.poker.protocols.texaspoker.TexasGameConfigProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
