// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/com/poker/protocols/texaspoker/proto/TexasGameStart.proto

package com.poker.protocols.texaspoker;

public final class TexasGameStartProto {
  private TexasGameStartProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BlindConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.poker.protocols.texaspoker.proto.BlindConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 ante = 1;</code>
     */
    long getAnte();

    /**
     * <code>int64 blind = 2;</code>
     */
    long getBlind();

    /**
     * <code>int32 blind_time = 3;</code>
     */
    int getBlindTime();
  }
  /**
   * Protobuf type {@code com.poker.protocols.texaspoker.proto.BlindConfig}
   */
  public  static final class BlindConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.poker.protocols.texaspoker.proto.BlindConfig)
      BlindConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlindConfig.newBuilder() to construct.
    private BlindConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlindConfig() {
      ante_ = 0L;
      blind_ = 0L;
      blindTime_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlindConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              ante_ = input.readInt64();
              break;
            }
            case 16: {

              blind_ = input.readInt64();
              break;
            }
            case 24: {

              blindTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.poker.protocols.texaspoker.TexasGameStartProto.internal_static_com_poker_protocols_texaspoker_proto_BlindConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.poker.protocols.texaspoker.TexasGameStartProto.internal_static_com_poker_protocols_texaspoker_proto_BlindConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.class, com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.Builder.class);
    }

    public static final int ANTE_FIELD_NUMBER = 1;
    private long ante_;
    /**
     * <code>int64 ante = 1;</code>
     */
    public long getAnte() {
      return ante_;
    }

    public static final int BLIND_FIELD_NUMBER = 2;
    private long blind_;
    /**
     * <code>int64 blind = 2;</code>
     */
    public long getBlind() {
      return blind_;
    }

    public static final int BLIND_TIME_FIELD_NUMBER = 3;
    private int blindTime_;
    /**
     * <code>int32 blind_time = 3;</code>
     */
    public int getBlindTime() {
      return blindTime_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ante_ != 0L) {
        output.writeInt64(1, ante_);
      }
      if (blind_ != 0L) {
        output.writeInt64(2, blind_);
      }
      if (blindTime_ != 0) {
        output.writeInt32(3, blindTime_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ante_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, ante_);
      }
      if (blind_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, blind_);
      }
      if (blindTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, blindTime_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig)) {
        return super.equals(obj);
      }
      com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig other = (com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig) obj;

      boolean result = true;
      result = result && (getAnte()
          == other.getAnte());
      result = result && (getBlind()
          == other.getBlind());
      result = result && (getBlindTime()
          == other.getBlindTime());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ANTE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAnte());
      hash = (37 * hash) + BLIND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBlind());
      hash = (37 * hash) + BLIND_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getBlindTime();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    //-----------------------------------------------------
    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseFrom(byte[] data,int offset ,int length)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data,offset,length);
        }
    //-----------------------------------------------------
    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    //-----------------------------------------------------
    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseFrom(
    		byte[] data,int offset ,int length,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data,offset,length, extensionRegistry);
        }
   //-----------------------------------------------------
    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.poker.protocols.texaspoker.proto.BlindConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.poker.protocols.texaspoker.proto.BlindConfig)
        com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.poker.protocols.texaspoker.TexasGameStartProto.internal_static_com_poker_protocols_texaspoker_proto_BlindConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.poker.protocols.texaspoker.TexasGameStartProto.internal_static_com_poker_protocols_texaspoker_proto_BlindConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.class, com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.Builder.class);
      }

      // Construct using com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        ante_ = 0L;

        blind_ = 0L;

        blindTime_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.poker.protocols.texaspoker.TexasGameStartProto.internal_static_com_poker_protocols_texaspoker_proto_BlindConfig_descriptor;
      }

      public com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig getDefaultInstanceForType() {
        return com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.getDefaultInstance();
      }

      public com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig build() {
        com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig buildPartial() {
        com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig result = new com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig(this);
        result.ante_ = ante_;
        result.blind_ = blind_;
        result.blindTime_ = blindTime_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig) {
          return mergeFrom((com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig other) {
        if (other == com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.getDefaultInstance()) return this;
        if (other.getAnte() != 0L) {
          setAnte(other.getAnte());
        }
        if (other.getBlind() != 0L) {
          setBlind(other.getBlind());
        }
        if (other.getBlindTime() != 0) {
          setBlindTime(other.getBlindTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long ante_ ;
      /**
       * <code>int64 ante = 1;</code>
       */
      public long getAnte() {
        return ante_;
      }
      /**
       * <code>int64 ante = 1;</code>
       */
      public Builder setAnte(long value) {
        
        ante_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 ante = 1;</code>
       */
      public Builder clearAnte() {
        
        ante_ = 0L;
        onChanged();
        return this;
      }

      private long blind_ ;
      /**
       * <code>int64 blind = 2;</code>
       */
      public long getBlind() {
        return blind_;
      }
      /**
       * <code>int64 blind = 2;</code>
       */
      public Builder setBlind(long value) {
        
        blind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 blind = 2;</code>
       */
      public Builder clearBlind() {
        
        blind_ = 0L;
        onChanged();
        return this;
      }

      private int blindTime_ ;
      /**
       * <code>int32 blind_time = 3;</code>
       */
      public int getBlindTime() {
        return blindTime_;
      }
      /**
       * <code>int32 blind_time = 3;</code>
       */
      public Builder setBlindTime(int value) {
        
        blindTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 blind_time = 3;</code>
       */
      public Builder clearBlindTime() {
        
        blindTime_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.poker.protocols.texaspoker.proto.BlindConfig)
    }

    // @@protoc_insertion_point(class_scope:com.poker.protocols.texaspoker.proto.BlindConfig)
    private static final com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig();
    }

    public static com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlindConfig>
        PARSER = new com.google.protobuf.AbstractParser<BlindConfig>() {
      public BlindConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlindConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlindConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlindConfig> getParserForType() {
      return PARSER;
    }

    public com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TexasGameStartOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.poker.protocols.texaspoker.proto.TexasGameStart)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 action_timeout = 1;</code>
     */
    int getActionTimeout();

    /**
     * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
     */
    java.util.List<com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig> 
        getConfigList();
    /**
     * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
     */
    com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig getConfig(int index);
    /**
     * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
     */
    int getConfigCount();
    /**
     * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
     */
    java.util.List<? extends com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfigOrBuilder> 
        getConfigOrBuilderList();
    /**
     * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
     */
    com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfigOrBuilder getConfigOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.poker.protocols.texaspoker.proto.TexasGameStart}
   */
  public  static final class TexasGameStart extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.poker.protocols.texaspoker.proto.TexasGameStart)
      TexasGameStartOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TexasGameStart.newBuilder() to construct.
    private TexasGameStart(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TexasGameStart() {
      actionTimeout_ = 0;
      config_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TexasGameStart(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              actionTimeout_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                config_ = new java.util.ArrayList<com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig>();
                mutable_bitField0_ |= 0x00000002;
              }
              config_.add(
                  input.readMessage(com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          config_ = java.util.Collections.unmodifiableList(config_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.poker.protocols.texaspoker.TexasGameStartProto.internal_static_com_poker_protocols_texaspoker_proto_TexasGameStart_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.poker.protocols.texaspoker.TexasGameStartProto.internal_static_com_poker_protocols_texaspoker_proto_TexasGameStart_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart.class, com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart.Builder.class);
    }

    private int bitField0_;
    public static final int ACTION_TIMEOUT_FIELD_NUMBER = 1;
    private int actionTimeout_;
    /**
     * <code>int32 action_timeout = 1;</code>
     */
    public int getActionTimeout() {
      return actionTimeout_;
    }

    public static final int CONFIG_FIELD_NUMBER = 2;
    private java.util.List<com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig> config_;
    /**
     * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
     */
    public java.util.List<com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig> getConfigList() {
      return config_;
    }
    /**
     * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
     */
    public java.util.List<? extends com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfigOrBuilder> 
        getConfigOrBuilderList() {
      return config_;
    }
    /**
     * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
     */
    public int getConfigCount() {
      return config_.size();
    }
    /**
     * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
     */
    public com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig getConfig(int index) {
      return config_.get(index);
    }
    /**
     * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
     */
    public com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfigOrBuilder getConfigOrBuilder(
        int index) {
      return config_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (actionTimeout_ != 0) {
        output.writeInt32(1, actionTimeout_);
      }
      for (int i = 0; i < config_.size(); i++) {
        output.writeMessage(2, config_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (actionTimeout_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, actionTimeout_);
      }
      for (int i = 0; i < config_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, config_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart)) {
        return super.equals(obj);
      }
      com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart other = (com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart) obj;

      boolean result = true;
      result = result && (getActionTimeout()
          == other.getActionTimeout());
      result = result && getConfigList()
          .equals(other.getConfigList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ACTION_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getActionTimeout();
      if (getConfigCount() > 0) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfigList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    //-----------------------------------------------------
    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseFrom(byte[] data,int offset ,int length)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data,offset,length);
        }
    //-----------------------------------------------------
    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    //-----------------------------------------------------
    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseFrom(
    		byte[] data,int offset ,int length,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data,offset,length, extensionRegistry);
        }
   //-----------------------------------------------------
    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.poker.protocols.texaspoker.proto.TexasGameStart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.poker.protocols.texaspoker.proto.TexasGameStart)
        com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStartOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.poker.protocols.texaspoker.TexasGameStartProto.internal_static_com_poker_protocols_texaspoker_proto_TexasGameStart_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.poker.protocols.texaspoker.TexasGameStartProto.internal_static_com_poker_protocols_texaspoker_proto_TexasGameStart_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart.class, com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart.Builder.class);
      }

      // Construct using com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getConfigFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        actionTimeout_ = 0;

        if (configBuilder_ == null) {
          config_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          configBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.poker.protocols.texaspoker.TexasGameStartProto.internal_static_com_poker_protocols_texaspoker_proto_TexasGameStart_descriptor;
      }

      public com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart getDefaultInstanceForType() {
        return com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart.getDefaultInstance();
      }

      public com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart build() {
        com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart buildPartial() {
        com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart result = new com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.actionTimeout_ = actionTimeout_;
        if (configBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            config_ = java.util.Collections.unmodifiableList(config_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.config_ = config_;
        } else {
          result.config_ = configBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart) {
          return mergeFrom((com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart other) {
        if (other == com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart.getDefaultInstance()) return this;
        if (other.getActionTimeout() != 0) {
          setActionTimeout(other.getActionTimeout());
        }
        if (configBuilder_ == null) {
          if (!other.config_.isEmpty()) {
            if (config_.isEmpty()) {
              config_ = other.config_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureConfigIsMutable();
              config_.addAll(other.config_);
            }
            onChanged();
          }
        } else {
          if (!other.config_.isEmpty()) {
            if (configBuilder_.isEmpty()) {
              configBuilder_.dispose();
              configBuilder_ = null;
              config_ = other.config_;
              bitField0_ = (bitField0_ & ~0x00000002);
              configBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getConfigFieldBuilder() : null;
            } else {
              configBuilder_.addAllMessages(other.config_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int actionTimeout_ ;
      /**
       * <code>int32 action_timeout = 1;</code>
       */
      public int getActionTimeout() {
        return actionTimeout_;
      }
      /**
       * <code>int32 action_timeout = 1;</code>
       */
      public Builder setActionTimeout(int value) {
        
        actionTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 action_timeout = 1;</code>
       */
      public Builder clearActionTimeout() {
        
        actionTimeout_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig> config_ =
        java.util.Collections.emptyList();
      private void ensureConfigIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          config_ = new java.util.ArrayList<com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig>(config_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig, com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.Builder, com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfigOrBuilder> configBuilder_;

      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public java.util.List<com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig> getConfigList() {
        if (configBuilder_ == null) {
          return java.util.Collections.unmodifiableList(config_);
        } else {
          return configBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public int getConfigCount() {
        if (configBuilder_ == null) {
          return config_.size();
        } else {
          return configBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig getConfig(int index) {
        if (configBuilder_ == null) {
          return config_.get(index);
        } else {
          return configBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public Builder setConfig(
          int index, com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigIsMutable();
          config_.set(index, value);
          onChanged();
        } else {
          configBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public Builder setConfig(
          int index, com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.Builder builderForValue) {
        if (configBuilder_ == null) {
          ensureConfigIsMutable();
          config_.set(index, builderForValue.build());
          onChanged();
        } else {
          configBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public Builder addConfig(com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigIsMutable();
          config_.add(value);
          onChanged();
        } else {
          configBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public Builder addConfig(
          int index, com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConfigIsMutable();
          config_.add(index, value);
          onChanged();
        } else {
          configBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public Builder addConfig(
          com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.Builder builderForValue) {
        if (configBuilder_ == null) {
          ensureConfigIsMutable();
          config_.add(builderForValue.build());
          onChanged();
        } else {
          configBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public Builder addConfig(
          int index, com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.Builder builderForValue) {
        if (configBuilder_ == null) {
          ensureConfigIsMutable();
          config_.add(index, builderForValue.build());
          onChanged();
        } else {
          configBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public Builder addAllConfig(
          java.lang.Iterable<? extends com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig> values) {
        if (configBuilder_ == null) {
          ensureConfigIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, config_);
          onChanged();
        } else {
          configBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public Builder clearConfig() {
        if (configBuilder_ == null) {
          config_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          configBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public Builder removeConfig(int index) {
        if (configBuilder_ == null) {
          ensureConfigIsMutable();
          config_.remove(index);
          onChanged();
        } else {
          configBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.Builder getConfigBuilder(
          int index) {
        return getConfigFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfigOrBuilder getConfigOrBuilder(
          int index) {
        if (configBuilder_ == null) {
          return config_.get(index);  } else {
          return configBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public java.util.List<? extends com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfigOrBuilder> 
           getConfigOrBuilderList() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(config_);
        }
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.Builder addConfigBuilder() {
        return getConfigFieldBuilder().addBuilder(
            com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.Builder addConfigBuilder(
          int index) {
        return getConfigFieldBuilder().addBuilder(
            index, com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .com.poker.protocols.texaspoker.proto.BlindConfig config = 2;</code>
       */
      public java.util.List<com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.Builder> 
           getConfigBuilderList() {
        return getConfigFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig, com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.Builder, com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfigOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig, com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfig.Builder, com.poker.protocols.texaspoker.TexasGameStartProto.BlindConfigOrBuilder>(
                  config_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.poker.protocols.texaspoker.proto.TexasGameStart)
    }

    // @@protoc_insertion_point(class_scope:com.poker.protocols.texaspoker.proto.TexasGameStart)
    private static final com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart();
    }

    public static com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TexasGameStart>
        PARSER = new com.google.protobuf.AbstractParser<TexasGameStart>() {
      public TexasGameStart parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TexasGameStart(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TexasGameStart> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TexasGameStart> getParserForType() {
      return PARSER;
    }

    public com.poker.protocols.texaspoker.TexasGameStartProto.TexasGameStart getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_poker_protocols_texaspoker_proto_BlindConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_poker_protocols_texaspoker_proto_BlindConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_poker_protocols_texaspoker_proto_TexasGameStart_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_poker_protocols_texaspoker_proto_TexasGameStart_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n=src/com/poker/protocols/texaspoker/pro" +
      "to/TexasGameStart.proto\022$com.poker.proto" +
      "cols.texaspoker.proto\">\n\013BlindConfig\022\014\n\004" +
      "ante\030\001 \001(\003\022\r\n\005blind\030\002 \001(\003\022\022\n\nblind_time\030" +
      "\003 \001(\005\"k\n\016TexasGameStart\022\026\n\016action_timeou" +
      "t\030\001 \001(\005\022A\n\006config\030\002 \003(\01321.com.poker.prot" +
      "ocols.texaspoker.proto.BlindConfigB5\n\036co" +
      "m.poker.protocols.texaspokerB\023TexasGameS" +
      "tartProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_poker_protocols_texaspoker_proto_BlindConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_poker_protocols_texaspoker_proto_BlindConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_poker_protocols_texaspoker_proto_BlindConfig_descriptor,
        new java.lang.String[] { "Ante", "Blind", "BlindTime", });
    internal_static_com_poker_protocols_texaspoker_proto_TexasGameStart_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_poker_protocols_texaspoker_proto_TexasGameStart_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_poker_protocols_texaspoker_proto_TexasGameStart_descriptor,
        new java.lang.String[] { "ActionTimeout", "Config", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
