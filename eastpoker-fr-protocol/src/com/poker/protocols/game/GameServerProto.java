// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/com/poker/protocols/game/proto/GameServer.proto

package com.poker.protocols.game;

public final class GameServerProto {
  private GameServerProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GameServerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.poker.protocols.game.proto.GameServer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 server_id = 1;</code>
     */
    int getServerId();

    /**
     * <code>int32 game_id = 2;</code>
     */
    int getGameId();

    /**
     * <code>int32 game_level = 3;</code>
     */
    int getGameLevel();

    /**
     * <code>int32 table_count = 4;</code>
     */
    int getTableCount();

    /**
     * <code>int32 table_max_user = 5;</code>
     */
    int getTableMaxUser();

    /**
     * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
     */
    java.util.List<com.poker.protocols.game.GameTableProto.GameTable> 
        getTableListList();
    /**
     * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
     */
    com.poker.protocols.game.GameTableProto.GameTable getTableList(int index);
    /**
     * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
     */
    int getTableListCount();
    /**
     * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
     */
    java.util.List<? extends com.poker.protocols.game.GameTableProto.GameTableOrBuilder> 
        getTableListOrBuilderList();
    /**
     * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
     */
    com.poker.protocols.game.GameTableProto.GameTableOrBuilder getTableListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.poker.protocols.game.proto.GameServer}
   */
  public  static final class GameServer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.poker.protocols.game.proto.GameServer)
      GameServerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GameServer.newBuilder() to construct.
    private GameServer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameServer() {
      serverId_ = 0;
      gameId_ = 0;
      gameLevel_ = 0;
      tableCount_ = 0;
      tableMaxUser_ = 0;
      tableList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GameServer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              serverId_ = input.readInt32();
              break;
            }
            case 16: {

              gameId_ = input.readInt32();
              break;
            }
            case 24: {

              gameLevel_ = input.readInt32();
              break;
            }
            case 32: {

              tableCount_ = input.readInt32();
              break;
            }
            case 40: {

              tableMaxUser_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                tableList_ = new java.util.ArrayList<com.poker.protocols.game.GameTableProto.GameTable>();
                mutable_bitField0_ |= 0x00000020;
              }
              tableList_.add(
                  input.readMessage(com.poker.protocols.game.GameTableProto.GameTable.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          tableList_ = java.util.Collections.unmodifiableList(tableList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.poker.protocols.game.GameServerProto.internal_static_com_poker_protocols_game_proto_GameServer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.poker.protocols.game.GameServerProto.internal_static_com_poker_protocols_game_proto_GameServer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.poker.protocols.game.GameServerProto.GameServer.class, com.poker.protocols.game.GameServerProto.GameServer.Builder.class);
    }

    private int bitField0_;
    public static final int SERVER_ID_FIELD_NUMBER = 1;
    private int serverId_;
    /**
     * <code>int32 server_id = 1;</code>
     */
    public int getServerId() {
      return serverId_;
    }

    public static final int GAME_ID_FIELD_NUMBER = 2;
    private int gameId_;
    /**
     * <code>int32 game_id = 2;</code>
     */
    public int getGameId() {
      return gameId_;
    }

    public static final int GAME_LEVEL_FIELD_NUMBER = 3;
    private int gameLevel_;
    /**
     * <code>int32 game_level = 3;</code>
     */
    public int getGameLevel() {
      return gameLevel_;
    }

    public static final int TABLE_COUNT_FIELD_NUMBER = 4;
    private int tableCount_;
    /**
     * <code>int32 table_count = 4;</code>
     */
    public int getTableCount() {
      return tableCount_;
    }

    public static final int TABLE_MAX_USER_FIELD_NUMBER = 5;
    private int tableMaxUser_;
    /**
     * <code>int32 table_max_user = 5;</code>
     */
    public int getTableMaxUser() {
      return tableMaxUser_;
    }

    public static final int TABLELIST_FIELD_NUMBER = 6;
    private java.util.List<com.poker.protocols.game.GameTableProto.GameTable> tableList_;
    /**
     * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
     */
    public java.util.List<com.poker.protocols.game.GameTableProto.GameTable> getTableListList() {
      return tableList_;
    }
    /**
     * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
     */
    public java.util.List<? extends com.poker.protocols.game.GameTableProto.GameTableOrBuilder> 
        getTableListOrBuilderList() {
      return tableList_;
    }
    /**
     * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
     */
    public int getTableListCount() {
      return tableList_.size();
    }
    /**
     * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
     */
    public com.poker.protocols.game.GameTableProto.GameTable getTableList(int index) {
      return tableList_.get(index);
    }
    /**
     * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
     */
    public com.poker.protocols.game.GameTableProto.GameTableOrBuilder getTableListOrBuilder(
        int index) {
      return tableList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (serverId_ != 0) {
        output.writeInt32(1, serverId_);
      }
      if (gameId_ != 0) {
        output.writeInt32(2, gameId_);
      }
      if (gameLevel_ != 0) {
        output.writeInt32(3, gameLevel_);
      }
      if (tableCount_ != 0) {
        output.writeInt32(4, tableCount_);
      }
      if (tableMaxUser_ != 0) {
        output.writeInt32(5, tableMaxUser_);
      }
      for (int i = 0; i < tableList_.size(); i++) {
        output.writeMessage(6, tableList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (serverId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, serverId_);
      }
      if (gameId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, gameId_);
      }
      if (gameLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameLevel_);
      }
      if (tableCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, tableCount_);
      }
      if (tableMaxUser_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, tableMaxUser_);
      }
      for (int i = 0; i < tableList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, tableList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.poker.protocols.game.GameServerProto.GameServer)) {
        return super.equals(obj);
      }
      com.poker.protocols.game.GameServerProto.GameServer other = (com.poker.protocols.game.GameServerProto.GameServer) obj;

      boolean result = true;
      result = result && (getServerId()
          == other.getServerId());
      result = result && (getGameId()
          == other.getGameId());
      result = result && (getGameLevel()
          == other.getGameLevel());
      result = result && (getTableCount()
          == other.getTableCount());
      result = result && (getTableMaxUser()
          == other.getTableMaxUser());
      result = result && getTableListList()
          .equals(other.getTableListList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERVER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getServerId();
      hash = (37 * hash) + GAME_ID_FIELD_NUMBER;
      hash = (53 * hash) + getGameId();
      hash = (37 * hash) + GAME_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getGameLevel();
      hash = (37 * hash) + TABLE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getTableCount();
      hash = (37 * hash) + TABLE_MAX_USER_FIELD_NUMBER;
      hash = (53 * hash) + getTableMaxUser();
      if (getTableListCount() > 0) {
        hash = (37 * hash) + TABLELIST_FIELD_NUMBER;
        hash = (53 * hash) + getTableListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.poker.protocols.game.GameServerProto.GameServer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.poker.protocols.game.GameServerProto.GameServer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.poker.protocols.game.GameServerProto.GameServer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.poker.protocols.game.GameServerProto.GameServer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.poker.protocols.game.GameServerProto.GameServer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    //-----------------------------------------------------
    public static com.poker.protocols.game.GameServerProto.GameServer parseFrom(byte[] data,int offset ,int length)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data,offset,length);
        }
    //-----------------------------------------------------
    public static com.poker.protocols.game.GameServerProto.GameServer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    //-----------------------------------------------------
    public static com.poker.protocols.game.GameServerProto.GameServer parseFrom(
    		byte[] data,int offset ,int length,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data,offset,length, extensionRegistry);
        }
   //-----------------------------------------------------
    public static com.poker.protocols.game.GameServerProto.GameServer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.poker.protocols.game.GameServerProto.GameServer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.poker.protocols.game.GameServerProto.GameServer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.poker.protocols.game.GameServerProto.GameServer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.poker.protocols.game.GameServerProto.GameServer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.poker.protocols.game.GameServerProto.GameServer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.poker.protocols.game.GameServerProto.GameServer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.poker.protocols.game.proto.GameServer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.poker.protocols.game.proto.GameServer)
        com.poker.protocols.game.GameServerProto.GameServerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.poker.protocols.game.GameServerProto.internal_static_com_poker_protocols_game_proto_GameServer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.poker.protocols.game.GameServerProto.internal_static_com_poker_protocols_game_proto_GameServer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.poker.protocols.game.GameServerProto.GameServer.class, com.poker.protocols.game.GameServerProto.GameServer.Builder.class);
      }

      // Construct using com.poker.protocols.game.GameServerProto.GameServer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTableListFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        serverId_ = 0;

        gameId_ = 0;

        gameLevel_ = 0;

        tableCount_ = 0;

        tableMaxUser_ = 0;

        if (tableListBuilder_ == null) {
          tableList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          tableListBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.poker.protocols.game.GameServerProto.internal_static_com_poker_protocols_game_proto_GameServer_descriptor;
      }

      public com.poker.protocols.game.GameServerProto.GameServer getDefaultInstanceForType() {
        return com.poker.protocols.game.GameServerProto.GameServer.getDefaultInstance();
      }

      public com.poker.protocols.game.GameServerProto.GameServer build() {
        com.poker.protocols.game.GameServerProto.GameServer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.poker.protocols.game.GameServerProto.GameServer buildPartial() {
        com.poker.protocols.game.GameServerProto.GameServer result = new com.poker.protocols.game.GameServerProto.GameServer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.serverId_ = serverId_;
        result.gameId_ = gameId_;
        result.gameLevel_ = gameLevel_;
        result.tableCount_ = tableCount_;
        result.tableMaxUser_ = tableMaxUser_;
        if (tableListBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            tableList_ = java.util.Collections.unmodifiableList(tableList_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.tableList_ = tableList_;
        } else {
          result.tableList_ = tableListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.poker.protocols.game.GameServerProto.GameServer) {
          return mergeFrom((com.poker.protocols.game.GameServerProto.GameServer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.poker.protocols.game.GameServerProto.GameServer other) {
        if (other == com.poker.protocols.game.GameServerProto.GameServer.getDefaultInstance()) return this;
        if (other.getServerId() != 0) {
          setServerId(other.getServerId());
        }
        if (other.getGameId() != 0) {
          setGameId(other.getGameId());
        }
        if (other.getGameLevel() != 0) {
          setGameLevel(other.getGameLevel());
        }
        if (other.getTableCount() != 0) {
          setTableCount(other.getTableCount());
        }
        if (other.getTableMaxUser() != 0) {
          setTableMaxUser(other.getTableMaxUser());
        }
        if (tableListBuilder_ == null) {
          if (!other.tableList_.isEmpty()) {
            if (tableList_.isEmpty()) {
              tableList_ = other.tableList_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureTableListIsMutable();
              tableList_.addAll(other.tableList_);
            }
            onChanged();
          }
        } else {
          if (!other.tableList_.isEmpty()) {
            if (tableListBuilder_.isEmpty()) {
              tableListBuilder_.dispose();
              tableListBuilder_ = null;
              tableList_ = other.tableList_;
              bitField0_ = (bitField0_ & ~0x00000020);
              tableListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTableListFieldBuilder() : null;
            } else {
              tableListBuilder_.addAllMessages(other.tableList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.poker.protocols.game.GameServerProto.GameServer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.poker.protocols.game.GameServerProto.GameServer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int serverId_ ;
      /**
       * <code>int32 server_id = 1;</code>
       */
      public int getServerId() {
        return serverId_;
      }
      /**
       * <code>int32 server_id = 1;</code>
       */
      public Builder setServerId(int value) {
        
        serverId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 server_id = 1;</code>
       */
      public Builder clearServerId() {
        
        serverId_ = 0;
        onChanged();
        return this;
      }

      private int gameId_ ;
      /**
       * <code>int32 game_id = 2;</code>
       */
      public int getGameId() {
        return gameId_;
      }
      /**
       * <code>int32 game_id = 2;</code>
       */
      public Builder setGameId(int value) {
        
        gameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 game_id = 2;</code>
       */
      public Builder clearGameId() {
        
        gameId_ = 0;
        onChanged();
        return this;
      }

      private int gameLevel_ ;
      /**
       * <code>int32 game_level = 3;</code>
       */
      public int getGameLevel() {
        return gameLevel_;
      }
      /**
       * <code>int32 game_level = 3;</code>
       */
      public Builder setGameLevel(int value) {
        
        gameLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 game_level = 3;</code>
       */
      public Builder clearGameLevel() {
        
        gameLevel_ = 0;
        onChanged();
        return this;
      }

      private int tableCount_ ;
      /**
       * <code>int32 table_count = 4;</code>
       */
      public int getTableCount() {
        return tableCount_;
      }
      /**
       * <code>int32 table_count = 4;</code>
       */
      public Builder setTableCount(int value) {
        
        tableCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 table_count = 4;</code>
       */
      public Builder clearTableCount() {
        
        tableCount_ = 0;
        onChanged();
        return this;
      }

      private int tableMaxUser_ ;
      /**
       * <code>int32 table_max_user = 5;</code>
       */
      public int getTableMaxUser() {
        return tableMaxUser_;
      }
      /**
       * <code>int32 table_max_user = 5;</code>
       */
      public Builder setTableMaxUser(int value) {
        
        tableMaxUser_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 table_max_user = 5;</code>
       */
      public Builder clearTableMaxUser() {
        
        tableMaxUser_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.poker.protocols.game.GameTableProto.GameTable> tableList_ =
        java.util.Collections.emptyList();
      private void ensureTableListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          tableList_ = new java.util.ArrayList<com.poker.protocols.game.GameTableProto.GameTable>(tableList_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.poker.protocols.game.GameTableProto.GameTable, com.poker.protocols.game.GameTableProto.GameTable.Builder, com.poker.protocols.game.GameTableProto.GameTableOrBuilder> tableListBuilder_;

      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public java.util.List<com.poker.protocols.game.GameTableProto.GameTable> getTableListList() {
        if (tableListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tableList_);
        } else {
          return tableListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public int getTableListCount() {
        if (tableListBuilder_ == null) {
          return tableList_.size();
        } else {
          return tableListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public com.poker.protocols.game.GameTableProto.GameTable getTableList(int index) {
        if (tableListBuilder_ == null) {
          return tableList_.get(index);
        } else {
          return tableListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public Builder setTableList(
          int index, com.poker.protocols.game.GameTableProto.GameTable value) {
        if (tableListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableListIsMutable();
          tableList_.set(index, value);
          onChanged();
        } else {
          tableListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public Builder setTableList(
          int index, com.poker.protocols.game.GameTableProto.GameTable.Builder builderForValue) {
        if (tableListBuilder_ == null) {
          ensureTableListIsMutable();
          tableList_.set(index, builderForValue.build());
          onChanged();
        } else {
          tableListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public Builder addTableList(com.poker.protocols.game.GameTableProto.GameTable value) {
        if (tableListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableListIsMutable();
          tableList_.add(value);
          onChanged();
        } else {
          tableListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public Builder addTableList(
          int index, com.poker.protocols.game.GameTableProto.GameTable value) {
        if (tableListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableListIsMutable();
          tableList_.add(index, value);
          onChanged();
        } else {
          tableListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public Builder addTableList(
          com.poker.protocols.game.GameTableProto.GameTable.Builder builderForValue) {
        if (tableListBuilder_ == null) {
          ensureTableListIsMutable();
          tableList_.add(builderForValue.build());
          onChanged();
        } else {
          tableListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public Builder addTableList(
          int index, com.poker.protocols.game.GameTableProto.GameTable.Builder builderForValue) {
        if (tableListBuilder_ == null) {
          ensureTableListIsMutable();
          tableList_.add(index, builderForValue.build());
          onChanged();
        } else {
          tableListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public Builder addAllTableList(
          java.lang.Iterable<? extends com.poker.protocols.game.GameTableProto.GameTable> values) {
        if (tableListBuilder_ == null) {
          ensureTableListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tableList_);
          onChanged();
        } else {
          tableListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public Builder clearTableList() {
        if (tableListBuilder_ == null) {
          tableList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          tableListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public Builder removeTableList(int index) {
        if (tableListBuilder_ == null) {
          ensureTableListIsMutable();
          tableList_.remove(index);
          onChanged();
        } else {
          tableListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public com.poker.protocols.game.GameTableProto.GameTable.Builder getTableListBuilder(
          int index) {
        return getTableListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public com.poker.protocols.game.GameTableProto.GameTableOrBuilder getTableListOrBuilder(
          int index) {
        if (tableListBuilder_ == null) {
          return tableList_.get(index);  } else {
          return tableListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public java.util.List<? extends com.poker.protocols.game.GameTableProto.GameTableOrBuilder> 
           getTableListOrBuilderList() {
        if (tableListBuilder_ != null) {
          return tableListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tableList_);
        }
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public com.poker.protocols.game.GameTableProto.GameTable.Builder addTableListBuilder() {
        return getTableListFieldBuilder().addBuilder(
            com.poker.protocols.game.GameTableProto.GameTable.getDefaultInstance());
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public com.poker.protocols.game.GameTableProto.GameTable.Builder addTableListBuilder(
          int index) {
        return getTableListFieldBuilder().addBuilder(
            index, com.poker.protocols.game.GameTableProto.GameTable.getDefaultInstance());
      }
      /**
       * <code>repeated .com.poker.protocols.game.proto.GameTable tableList = 6;</code>
       */
      public java.util.List<com.poker.protocols.game.GameTableProto.GameTable.Builder> 
           getTableListBuilderList() {
        return getTableListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.poker.protocols.game.GameTableProto.GameTable, com.poker.protocols.game.GameTableProto.GameTable.Builder, com.poker.protocols.game.GameTableProto.GameTableOrBuilder> 
          getTableListFieldBuilder() {
        if (tableListBuilder_ == null) {
          tableListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.poker.protocols.game.GameTableProto.GameTable, com.poker.protocols.game.GameTableProto.GameTable.Builder, com.poker.protocols.game.GameTableProto.GameTableOrBuilder>(
                  tableList_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          tableList_ = null;
        }
        return tableListBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.poker.protocols.game.proto.GameServer)
    }

    // @@protoc_insertion_point(class_scope:com.poker.protocols.game.proto.GameServer)
    private static final com.poker.protocols.game.GameServerProto.GameServer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.poker.protocols.game.GameServerProto.GameServer();
    }

    public static com.poker.protocols.game.GameServerProto.GameServer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GameServer>
        PARSER = new com.google.protobuf.AbstractParser<GameServer>() {
      public GameServer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameServer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameServer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameServer> getParserForType() {
      return PARSER;
    }

    public com.poker.protocols.game.GameServerProto.GameServer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_poker_protocols_game_proto_GameServer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_poker_protocols_game_proto_GameServer_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n3src/com/poker/protocols/game/proto/Gam" +
      "eServer.proto\022\036com.poker.protocols.game." +
      "proto\0322src/com/poker/protocols/game/prot" +
      "o/GameTable.proto\"\257\001\n\nGameServer\022\021\n\tserv" +
      "er_id\030\001 \001(\005\022\017\n\007game_id\030\002 \001(\005\022\022\n\ngame_lev" +
      "el\030\003 \001(\005\022\023\n\013table_count\030\004 \001(\005\022\026\n\016table_m" +
      "ax_user\030\005 \001(\005\022<\n\ttableList\030\006 \003(\0132).com.p" +
      "oker.protocols.game.proto.GameTableB+\n\030c" +
      "om.poker.protocols.gameB\017GameServerProto" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.poker.protocols.game.GameTableProto.getDescriptor(),
        }, assigner);
    internal_static_com_poker_protocols_game_proto_GameServer_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_poker_protocols_game_proto_GameServer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_poker_protocols_game_proto_GameServer_descriptor,
        new java.lang.String[] { "ServerId", "GameId", "GameLevel", "TableCount", "TableMaxUser", "TableList", });
    com.poker.protocols.game.GameTableProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
