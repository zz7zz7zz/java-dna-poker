// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/com/poker/protocols/server/proto/RoomInfo.proto

package com.poker.protocols.server;

public final class RoomInfoProto {
  private RoomInfoProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RoomInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 table_count = 1;
    /**
     * <code>optional int32 table_count = 1;</code>
     */
    boolean hasTableCount();
    /**
     * <code>optional int32 table_count = 1;</code>
     */
    int getTableCount();

    // optional int32 table_max_user = 2;
    /**
     * <code>optional int32 table_max_user = 2;</code>
     */
    boolean hasTableMaxUser();
    /**
     * <code>optional int32 table_max_user = 2;</code>
     */
    int getTableMaxUser();

    // repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;
    /**
     * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
     */
    java.util.List<com.poker.protocols.server.TableInfoProto.TableInfo> 
        getTableInfoListList();
    /**
     * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
     */
    com.poker.protocols.server.TableInfoProto.TableInfo getTableInfoList(int index);
    /**
     * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
     */
    int getTableInfoListCount();
    /**
     * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
     */
    java.util.List<? extends com.poker.protocols.server.TableInfoProto.TableInfoOrBuilder> 
        getTableInfoListOrBuilderList();
    /**
     * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
     */
    com.poker.protocols.server.TableInfoProto.TableInfoOrBuilder getTableInfoListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.poker.protocols.server.proto.RoomInfo}
   */
  public static final class RoomInfo extends
      com.google.protobuf.GeneratedMessage
      implements RoomInfoOrBuilder {
    // Use RoomInfo.newBuilder() to construct.
    private RoomInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RoomInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RoomInfo defaultInstance;
    public static RoomInfo getDefaultInstance() {
      return defaultInstance;
    }

    public RoomInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RoomInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              tableCount_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tableMaxUser_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                tableInfoList_ = new java.util.ArrayList<com.poker.protocols.server.TableInfoProto.TableInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              tableInfoList_.add(input.readMessage(com.poker.protocols.server.TableInfoProto.TableInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          tableInfoList_ = java.util.Collections.unmodifiableList(tableInfoList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.poker.protocols.server.RoomInfoProto.internal_static_com_poker_protocols_server_proto_RoomInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.poker.protocols.server.RoomInfoProto.internal_static_com_poker_protocols_server_proto_RoomInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.poker.protocols.server.RoomInfoProto.RoomInfo.class, com.poker.protocols.server.RoomInfoProto.RoomInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<RoomInfo> PARSER =
        new com.google.protobuf.AbstractParser<RoomInfo>() {
      public RoomInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoomInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RoomInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 table_count = 1;
    public static final int TABLE_COUNT_FIELD_NUMBER = 1;
    private int tableCount_;
    /**
     * <code>optional int32 table_count = 1;</code>
     */
    public boolean hasTableCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 table_count = 1;</code>
     */
    public int getTableCount() {
      return tableCount_;
    }

    // optional int32 table_max_user = 2;
    public static final int TABLE_MAX_USER_FIELD_NUMBER = 2;
    private int tableMaxUser_;
    /**
     * <code>optional int32 table_max_user = 2;</code>
     */
    public boolean hasTableMaxUser() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 table_max_user = 2;</code>
     */
    public int getTableMaxUser() {
      return tableMaxUser_;
    }

    // repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;
    public static final int TABLEINFOLIST_FIELD_NUMBER = 3;
    private java.util.List<com.poker.protocols.server.TableInfoProto.TableInfo> tableInfoList_;
    /**
     * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
     */
    public java.util.List<com.poker.protocols.server.TableInfoProto.TableInfo> getTableInfoListList() {
      return tableInfoList_;
    }
    /**
     * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
     */
    public java.util.List<? extends com.poker.protocols.server.TableInfoProto.TableInfoOrBuilder> 
        getTableInfoListOrBuilderList() {
      return tableInfoList_;
    }
    /**
     * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
     */
    public int getTableInfoListCount() {
      return tableInfoList_.size();
    }
    /**
     * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
     */
    public com.poker.protocols.server.TableInfoProto.TableInfo getTableInfoList(int index) {
      return tableInfoList_.get(index);
    }
    /**
     * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
     */
    public com.poker.protocols.server.TableInfoProto.TableInfoOrBuilder getTableInfoListOrBuilder(
        int index) {
      return tableInfoList_.get(index);
    }

    private void initFields() {
      tableCount_ = 0;
      tableMaxUser_ = 0;
      tableInfoList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, tableCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, tableMaxUser_);
      }
      for (int i = 0; i < tableInfoList_.size(); i++) {
        output.writeMessage(3, tableInfoList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, tableCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, tableMaxUser_);
      }
      for (int i = 0; i < tableInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tableInfoList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.poker.protocols.server.RoomInfoProto.RoomInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    //-----------------------------------------------------
    public static com.poker.protocols.server.RoomInfoProto.RoomInfo parseFrom(byte[] data,int offset ,int length)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data,offset,length);
        }
    //-----------------------------------------------------
    public static com.poker.protocols.server.RoomInfoProto.RoomInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    //-----------------------------------------------------
    public static com.poker.protocols.server.RoomInfoProto.RoomInfo parseFrom(
    		byte[] data,int offset ,int length,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data,offset,length, extensionRegistry);
        }
   //-----------------------------------------------------
    public static com.poker.protocols.server.RoomInfoProto.RoomInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.poker.protocols.server.RoomInfoProto.RoomInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.poker.protocols.server.RoomInfoProto.RoomInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.poker.protocols.server.RoomInfoProto.RoomInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.poker.protocols.server.RoomInfoProto.RoomInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.poker.protocols.server.RoomInfoProto.RoomInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.poker.protocols.server.RoomInfoProto.RoomInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.poker.protocols.server.RoomInfoProto.RoomInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.poker.protocols.server.RoomInfoProto.RoomInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.poker.protocols.server.proto.RoomInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.poker.protocols.server.RoomInfoProto.RoomInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.poker.protocols.server.RoomInfoProto.internal_static_com_poker_protocols_server_proto_RoomInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.poker.protocols.server.RoomInfoProto.internal_static_com_poker_protocols_server_proto_RoomInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.poker.protocols.server.RoomInfoProto.RoomInfo.class, com.poker.protocols.server.RoomInfoProto.RoomInfo.Builder.class);
      }

      // Construct using com.poker.protocols.server.RoomInfoProto.RoomInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTableInfoListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tableCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tableMaxUser_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tableInfoListBuilder_ == null) {
          tableInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          tableInfoListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.poker.protocols.server.RoomInfoProto.internal_static_com_poker_protocols_server_proto_RoomInfo_descriptor;
      }

      public com.poker.protocols.server.RoomInfoProto.RoomInfo getDefaultInstanceForType() {
        return com.poker.protocols.server.RoomInfoProto.RoomInfo.getDefaultInstance();
      }

      public com.poker.protocols.server.RoomInfoProto.RoomInfo build() {
        com.poker.protocols.server.RoomInfoProto.RoomInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.poker.protocols.server.RoomInfoProto.RoomInfo buildPartial() {
        com.poker.protocols.server.RoomInfoProto.RoomInfo result = new com.poker.protocols.server.RoomInfoProto.RoomInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tableCount_ = tableCount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tableMaxUser_ = tableMaxUser_;
        if (tableInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            tableInfoList_ = java.util.Collections.unmodifiableList(tableInfoList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tableInfoList_ = tableInfoList_;
        } else {
          result.tableInfoList_ = tableInfoListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.poker.protocols.server.RoomInfoProto.RoomInfo) {
          return mergeFrom((com.poker.protocols.server.RoomInfoProto.RoomInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.poker.protocols.server.RoomInfoProto.RoomInfo other) {
        if (other == com.poker.protocols.server.RoomInfoProto.RoomInfo.getDefaultInstance()) return this;
        if (other.hasTableCount()) {
          setTableCount(other.getTableCount());
        }
        if (other.hasTableMaxUser()) {
          setTableMaxUser(other.getTableMaxUser());
        }
        if (tableInfoListBuilder_ == null) {
          if (!other.tableInfoList_.isEmpty()) {
            if (tableInfoList_.isEmpty()) {
              tableInfoList_ = other.tableInfoList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTableInfoListIsMutable();
              tableInfoList_.addAll(other.tableInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.tableInfoList_.isEmpty()) {
            if (tableInfoListBuilder_.isEmpty()) {
              tableInfoListBuilder_.dispose();
              tableInfoListBuilder_ = null;
              tableInfoList_ = other.tableInfoList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              tableInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTableInfoListFieldBuilder() : null;
            } else {
              tableInfoListBuilder_.addAllMessages(other.tableInfoList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.poker.protocols.server.RoomInfoProto.RoomInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.poker.protocols.server.RoomInfoProto.RoomInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 table_count = 1;
      private int tableCount_ ;
      /**
       * <code>optional int32 table_count = 1;</code>
       */
      public boolean hasTableCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 table_count = 1;</code>
       */
      public int getTableCount() {
        return tableCount_;
      }
      /**
       * <code>optional int32 table_count = 1;</code>
       */
      public Builder setTableCount(int value) {
        bitField0_ |= 0x00000001;
        tableCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 table_count = 1;</code>
       */
      public Builder clearTableCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tableCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 table_max_user = 2;
      private int tableMaxUser_ ;
      /**
       * <code>optional int32 table_max_user = 2;</code>
       */
      public boolean hasTableMaxUser() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 table_max_user = 2;</code>
       */
      public int getTableMaxUser() {
        return tableMaxUser_;
      }
      /**
       * <code>optional int32 table_max_user = 2;</code>
       */
      public Builder setTableMaxUser(int value) {
        bitField0_ |= 0x00000002;
        tableMaxUser_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 table_max_user = 2;</code>
       */
      public Builder clearTableMaxUser() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tableMaxUser_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;
      private java.util.List<com.poker.protocols.server.TableInfoProto.TableInfo> tableInfoList_ =
        java.util.Collections.emptyList();
      private void ensureTableInfoListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          tableInfoList_ = new java.util.ArrayList<com.poker.protocols.server.TableInfoProto.TableInfo>(tableInfoList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.poker.protocols.server.TableInfoProto.TableInfo, com.poker.protocols.server.TableInfoProto.TableInfo.Builder, com.poker.protocols.server.TableInfoProto.TableInfoOrBuilder> tableInfoListBuilder_;

      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public java.util.List<com.poker.protocols.server.TableInfoProto.TableInfo> getTableInfoListList() {
        if (tableInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tableInfoList_);
        } else {
          return tableInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public int getTableInfoListCount() {
        if (tableInfoListBuilder_ == null) {
          return tableInfoList_.size();
        } else {
          return tableInfoListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public com.poker.protocols.server.TableInfoProto.TableInfo getTableInfoList(int index) {
        if (tableInfoListBuilder_ == null) {
          return tableInfoList_.get(index);
        } else {
          return tableInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public Builder setTableInfoList(
          int index, com.poker.protocols.server.TableInfoProto.TableInfo value) {
        if (tableInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableInfoListIsMutable();
          tableInfoList_.set(index, value);
          onChanged();
        } else {
          tableInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public Builder setTableInfoList(
          int index, com.poker.protocols.server.TableInfoProto.TableInfo.Builder builderForValue) {
        if (tableInfoListBuilder_ == null) {
          ensureTableInfoListIsMutable();
          tableInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          tableInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public Builder addTableInfoList(com.poker.protocols.server.TableInfoProto.TableInfo value) {
        if (tableInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableInfoListIsMutable();
          tableInfoList_.add(value);
          onChanged();
        } else {
          tableInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public Builder addTableInfoList(
          int index, com.poker.protocols.server.TableInfoProto.TableInfo value) {
        if (tableInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableInfoListIsMutable();
          tableInfoList_.add(index, value);
          onChanged();
        } else {
          tableInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public Builder addTableInfoList(
          com.poker.protocols.server.TableInfoProto.TableInfo.Builder builderForValue) {
        if (tableInfoListBuilder_ == null) {
          ensureTableInfoListIsMutable();
          tableInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          tableInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public Builder addTableInfoList(
          int index, com.poker.protocols.server.TableInfoProto.TableInfo.Builder builderForValue) {
        if (tableInfoListBuilder_ == null) {
          ensureTableInfoListIsMutable();
          tableInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          tableInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public Builder addAllTableInfoList(
          java.lang.Iterable<? extends com.poker.protocols.server.TableInfoProto.TableInfo> values) {
        if (tableInfoListBuilder_ == null) {
          ensureTableInfoListIsMutable();
          super.addAll(values, tableInfoList_);
          onChanged();
        } else {
          tableInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public Builder clearTableInfoList() {
        if (tableInfoListBuilder_ == null) {
          tableInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          tableInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public Builder removeTableInfoList(int index) {
        if (tableInfoListBuilder_ == null) {
          ensureTableInfoListIsMutable();
          tableInfoList_.remove(index);
          onChanged();
        } else {
          tableInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public com.poker.protocols.server.TableInfoProto.TableInfo.Builder getTableInfoListBuilder(
          int index) {
        return getTableInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public com.poker.protocols.server.TableInfoProto.TableInfoOrBuilder getTableInfoListOrBuilder(
          int index) {
        if (tableInfoListBuilder_ == null) {
          return tableInfoList_.get(index);  } else {
          return tableInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public java.util.List<? extends com.poker.protocols.server.TableInfoProto.TableInfoOrBuilder> 
           getTableInfoListOrBuilderList() {
        if (tableInfoListBuilder_ != null) {
          return tableInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tableInfoList_);
        }
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public com.poker.protocols.server.TableInfoProto.TableInfo.Builder addTableInfoListBuilder() {
        return getTableInfoListFieldBuilder().addBuilder(
            com.poker.protocols.server.TableInfoProto.TableInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public com.poker.protocols.server.TableInfoProto.TableInfo.Builder addTableInfoListBuilder(
          int index) {
        return getTableInfoListFieldBuilder().addBuilder(
            index, com.poker.protocols.server.TableInfoProto.TableInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.TableInfo tableInfoList = 3;</code>
       */
      public java.util.List<com.poker.protocols.server.TableInfoProto.TableInfo.Builder> 
           getTableInfoListBuilderList() {
        return getTableInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.poker.protocols.server.TableInfoProto.TableInfo, com.poker.protocols.server.TableInfoProto.TableInfo.Builder, com.poker.protocols.server.TableInfoProto.TableInfoOrBuilder> 
          getTableInfoListFieldBuilder() {
        if (tableInfoListBuilder_ == null) {
          tableInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.poker.protocols.server.TableInfoProto.TableInfo, com.poker.protocols.server.TableInfoProto.TableInfo.Builder, com.poker.protocols.server.TableInfoProto.TableInfoOrBuilder>(
                  tableInfoList_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          tableInfoList_ = null;
        }
        return tableInfoListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.poker.protocols.server.proto.RoomInfo)
    }

    static {
      defaultInstance = new RoomInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.poker.protocols.server.proto.RoomInfo)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_poker_protocols_server_proto_RoomInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_poker_protocols_server_proto_RoomInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n3src/com/poker/protocols/server/proto/R" +
      "oomInfo.proto\022 com.poker.protocols.serve" +
      "r.proto\0324src/com/poker/protocols/server/" +
      "proto/TableInfo.proto\"{\n\010RoomInfo\022\023\n\013tab" +
      "le_count\030\001 \001(\005\022\026\n\016table_max_user\030\002 \001(\005\022B" +
      "\n\rtableInfoList\030\003 \003(\0132+.com.poker.protoc" +
      "ols.server.proto.TableInfoB+\n\032com.poker." +
      "protocols.serverB\rRoomInfoProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_poker_protocols_server_proto_RoomInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_poker_protocols_server_proto_RoomInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_poker_protocols_server_proto_RoomInfo_descriptor,
              new java.lang.String[] { "TableCount", "TableMaxUser", "TableInfoList", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.poker.protocols.server.TableInfoProto.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
