// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/com/poker/protocols/server/proto/DispatchChain.proto

package com.poker.protocols.server;

public final class DispatchChainProto {
  private DispatchChainProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DispatchChainOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 src_server_type = 1;
    /**
     * <code>optional int32 src_server_type = 1;</code>
     */
    boolean hasSrcServerType();
    /**
     * <code>optional int32 src_server_type = 1;</code>
     */
    int getSrcServerType();

    // optional int32 src_server_id = 2;
    /**
     * <code>optional int32 src_server_id = 2;</code>
     */
    boolean hasSrcServerId();
    /**
     * <code>optional int32 src_server_id = 2;</code>
     */
    int getSrcServerId();

    // optional int32 dst_server_type = 3;
    /**
     * <code>optional int32 dst_server_type = 3;</code>
     */
    boolean hasDstServerType();
    /**
     * <code>optional int32 dst_server_type = 3;</code>
     */
    int getDstServerType();

    // optional int32 dst_server_id = 4;
    /**
     * <code>optional int32 dst_server_id = 4;</code>
     */
    boolean hasDstServerId();
    /**
     * <code>optional int32 dst_server_id = 4;</code>
     */
    int getDstServerId();

    // optional int32 dst_game_group = 5;
    /**
     * <code>optional int32 dst_game_group = 5;</code>
     */
    boolean hasDstGameGroup();
    /**
     * <code>optional int32 dst_game_group = 5;</code>
     */
    int getDstGameGroup();

    // optional int32 dst_match_group = 6;
    /**
     * <code>optional int32 dst_match_group = 6;</code>
     */
    boolean hasDstMatchGroup();
    /**
     * <code>optional int32 dst_match_group = 6;</code>
     */
    int getDstMatchGroup();
  }
  /**
   * Protobuf type {@code com.poker.protocols.server.proto.DispatchChain}
   */
  public static final class DispatchChain extends
      com.google.protobuf.GeneratedMessage
      implements DispatchChainOrBuilder {
    // Use DispatchChain.newBuilder() to construct.
    private DispatchChain(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DispatchChain(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DispatchChain defaultInstance;
    public static DispatchChain getDefaultInstance() {
      return defaultInstance;
    }

    public DispatchChain getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DispatchChain(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              srcServerType_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              srcServerId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              dstServerType_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              dstServerId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              dstGameGroup_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              dstMatchGroup_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.poker.protocols.server.DispatchChainProto.internal_static_com_poker_protocols_server_proto_DispatchChain_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.poker.protocols.server.DispatchChainProto.internal_static_com_poker_protocols_server_proto_DispatchChain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.poker.protocols.server.DispatchChainProto.DispatchChain.class, com.poker.protocols.server.DispatchChainProto.DispatchChain.Builder.class);
    }

    public static com.google.protobuf.Parser<DispatchChain> PARSER =
        new com.google.protobuf.AbstractParser<DispatchChain>() {
      public DispatchChain parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DispatchChain(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DispatchChain> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 src_server_type = 1;
    public static final int SRC_SERVER_TYPE_FIELD_NUMBER = 1;
    private int srcServerType_;
    /**
     * <code>optional int32 src_server_type = 1;</code>
     */
    public boolean hasSrcServerType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 src_server_type = 1;</code>
     */
    public int getSrcServerType() {
      return srcServerType_;
    }

    // optional int32 src_server_id = 2;
    public static final int SRC_SERVER_ID_FIELD_NUMBER = 2;
    private int srcServerId_;
    /**
     * <code>optional int32 src_server_id = 2;</code>
     */
    public boolean hasSrcServerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 src_server_id = 2;</code>
     */
    public int getSrcServerId() {
      return srcServerId_;
    }

    // optional int32 dst_server_type = 3;
    public static final int DST_SERVER_TYPE_FIELD_NUMBER = 3;
    private int dstServerType_;
    /**
     * <code>optional int32 dst_server_type = 3;</code>
     */
    public boolean hasDstServerType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 dst_server_type = 3;</code>
     */
    public int getDstServerType() {
      return dstServerType_;
    }

    // optional int32 dst_server_id = 4;
    public static final int DST_SERVER_ID_FIELD_NUMBER = 4;
    private int dstServerId_;
    /**
     * <code>optional int32 dst_server_id = 4;</code>
     */
    public boolean hasDstServerId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 dst_server_id = 4;</code>
     */
    public int getDstServerId() {
      return dstServerId_;
    }

    // optional int32 dst_game_group = 5;
    public static final int DST_GAME_GROUP_FIELD_NUMBER = 5;
    private int dstGameGroup_;
    /**
     * <code>optional int32 dst_game_group = 5;</code>
     */
    public boolean hasDstGameGroup() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 dst_game_group = 5;</code>
     */
    public int getDstGameGroup() {
      return dstGameGroup_;
    }

    // optional int32 dst_match_group = 6;
    public static final int DST_MATCH_GROUP_FIELD_NUMBER = 6;
    private int dstMatchGroup_;
    /**
     * <code>optional int32 dst_match_group = 6;</code>
     */
    public boolean hasDstMatchGroup() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 dst_match_group = 6;</code>
     */
    public int getDstMatchGroup() {
      return dstMatchGroup_;
    }

    private void initFields() {
      srcServerType_ = 0;
      srcServerId_ = 0;
      dstServerType_ = 0;
      dstServerId_ = 0;
      dstGameGroup_ = 0;
      dstMatchGroup_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, srcServerType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, srcServerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, dstServerType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, dstServerId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, dstGameGroup_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, dstMatchGroup_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, srcServerType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, srcServerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, dstServerType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, dstServerId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, dstGameGroup_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, dstMatchGroup_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.poker.protocols.server.DispatchChainProto.DispatchChain parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.poker.protocols.server.DispatchChainProto.DispatchChain parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.poker.protocols.server.DispatchChainProto.DispatchChain parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    //-----------------------------------------------------
    public static com.poker.protocols.server.DispatchChainProto.DispatchChain parseFrom(byte[] data,int offset ,int length)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data,offset,length);
        }
    //-----------------------------------------------------
    public static com.poker.protocols.server.DispatchChainProto.DispatchChain parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    //-----------------------------------------------------
    public static com.poker.protocols.server.DispatchChainProto.DispatchChain parseFrom(
    		byte[] data,int offset ,int length,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data,offset,length, extensionRegistry);
        }
   //-----------------------------------------------------
    public static com.poker.protocols.server.DispatchChainProto.DispatchChain parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.poker.protocols.server.DispatchChainProto.DispatchChain parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.poker.protocols.server.DispatchChainProto.DispatchChain parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.poker.protocols.server.DispatchChainProto.DispatchChain parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.poker.protocols.server.DispatchChainProto.DispatchChain parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.poker.protocols.server.DispatchChainProto.DispatchChain parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.poker.protocols.server.DispatchChainProto.DispatchChain prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.poker.protocols.server.proto.DispatchChain}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.poker.protocols.server.DispatchChainProto.DispatchChainOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.poker.protocols.server.DispatchChainProto.internal_static_com_poker_protocols_server_proto_DispatchChain_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.poker.protocols.server.DispatchChainProto.internal_static_com_poker_protocols_server_proto_DispatchChain_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.poker.protocols.server.DispatchChainProto.DispatchChain.class, com.poker.protocols.server.DispatchChainProto.DispatchChain.Builder.class);
      }

      // Construct using com.poker.protocols.server.DispatchChainProto.DispatchChain.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        srcServerType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        srcServerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        dstServerType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        dstServerId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        dstGameGroup_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        dstMatchGroup_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.poker.protocols.server.DispatchChainProto.internal_static_com_poker_protocols_server_proto_DispatchChain_descriptor;
      }

      public com.poker.protocols.server.DispatchChainProto.DispatchChain getDefaultInstanceForType() {
        return com.poker.protocols.server.DispatchChainProto.DispatchChain.getDefaultInstance();
      }

      public com.poker.protocols.server.DispatchChainProto.DispatchChain build() {
        com.poker.protocols.server.DispatchChainProto.DispatchChain result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.poker.protocols.server.DispatchChainProto.DispatchChain buildPartial() {
        com.poker.protocols.server.DispatchChainProto.DispatchChain result = new com.poker.protocols.server.DispatchChainProto.DispatchChain(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.srcServerType_ = srcServerType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.srcServerId_ = srcServerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dstServerType_ = dstServerType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dstServerId_ = dstServerId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dstGameGroup_ = dstGameGroup_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dstMatchGroup_ = dstMatchGroup_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.poker.protocols.server.DispatchChainProto.DispatchChain) {
          return mergeFrom((com.poker.protocols.server.DispatchChainProto.DispatchChain)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.poker.protocols.server.DispatchChainProto.DispatchChain other) {
        if (other == com.poker.protocols.server.DispatchChainProto.DispatchChain.getDefaultInstance()) return this;
        if (other.hasSrcServerType()) {
          setSrcServerType(other.getSrcServerType());
        }
        if (other.hasSrcServerId()) {
          setSrcServerId(other.getSrcServerId());
        }
        if (other.hasDstServerType()) {
          setDstServerType(other.getDstServerType());
        }
        if (other.hasDstServerId()) {
          setDstServerId(other.getDstServerId());
        }
        if (other.hasDstGameGroup()) {
          setDstGameGroup(other.getDstGameGroup());
        }
        if (other.hasDstMatchGroup()) {
          setDstMatchGroup(other.getDstMatchGroup());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.poker.protocols.server.DispatchChainProto.DispatchChain parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.poker.protocols.server.DispatchChainProto.DispatchChain) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 src_server_type = 1;
      private int srcServerType_ ;
      /**
       * <code>optional int32 src_server_type = 1;</code>
       */
      public boolean hasSrcServerType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 src_server_type = 1;</code>
       */
      public int getSrcServerType() {
        return srcServerType_;
      }
      /**
       * <code>optional int32 src_server_type = 1;</code>
       */
      public Builder setSrcServerType(int value) {
        bitField0_ |= 0x00000001;
        srcServerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 src_server_type = 1;</code>
       */
      public Builder clearSrcServerType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        srcServerType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 src_server_id = 2;
      private int srcServerId_ ;
      /**
       * <code>optional int32 src_server_id = 2;</code>
       */
      public boolean hasSrcServerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 src_server_id = 2;</code>
       */
      public int getSrcServerId() {
        return srcServerId_;
      }
      /**
       * <code>optional int32 src_server_id = 2;</code>
       */
      public Builder setSrcServerId(int value) {
        bitField0_ |= 0x00000002;
        srcServerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 src_server_id = 2;</code>
       */
      public Builder clearSrcServerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        srcServerId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dst_server_type = 3;
      private int dstServerType_ ;
      /**
       * <code>optional int32 dst_server_type = 3;</code>
       */
      public boolean hasDstServerType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 dst_server_type = 3;</code>
       */
      public int getDstServerType() {
        return dstServerType_;
      }
      /**
       * <code>optional int32 dst_server_type = 3;</code>
       */
      public Builder setDstServerType(int value) {
        bitField0_ |= 0x00000004;
        dstServerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dst_server_type = 3;</code>
       */
      public Builder clearDstServerType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dstServerType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dst_server_id = 4;
      private int dstServerId_ ;
      /**
       * <code>optional int32 dst_server_id = 4;</code>
       */
      public boolean hasDstServerId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 dst_server_id = 4;</code>
       */
      public int getDstServerId() {
        return dstServerId_;
      }
      /**
       * <code>optional int32 dst_server_id = 4;</code>
       */
      public Builder setDstServerId(int value) {
        bitField0_ |= 0x00000008;
        dstServerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dst_server_id = 4;</code>
       */
      public Builder clearDstServerId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dstServerId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dst_game_group = 5;
      private int dstGameGroup_ ;
      /**
       * <code>optional int32 dst_game_group = 5;</code>
       */
      public boolean hasDstGameGroup() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 dst_game_group = 5;</code>
       */
      public int getDstGameGroup() {
        return dstGameGroup_;
      }
      /**
       * <code>optional int32 dst_game_group = 5;</code>
       */
      public Builder setDstGameGroup(int value) {
        bitField0_ |= 0x00000010;
        dstGameGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dst_game_group = 5;</code>
       */
      public Builder clearDstGameGroup() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dstGameGroup_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dst_match_group = 6;
      private int dstMatchGroup_ ;
      /**
       * <code>optional int32 dst_match_group = 6;</code>
       */
      public boolean hasDstMatchGroup() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 dst_match_group = 6;</code>
       */
      public int getDstMatchGroup() {
        return dstMatchGroup_;
      }
      /**
       * <code>optional int32 dst_match_group = 6;</code>
       */
      public Builder setDstMatchGroup(int value) {
        bitField0_ |= 0x00000020;
        dstMatchGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dst_match_group = 6;</code>
       */
      public Builder clearDstMatchGroup() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dstMatchGroup_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.poker.protocols.server.proto.DispatchChain)
    }

    static {
      defaultInstance = new DispatchChain(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.poker.protocols.server.proto.DispatchChain)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_poker_protocols_server_proto_DispatchChain_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_poker_protocols_server_proto_DispatchChain_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n8src/com/poker/protocols/server/proto/D" +
      "ispatchChain.proto\022 com.poker.protocols." +
      "server.proto\"\240\001\n\rDispatchChain\022\027\n\017src_se" +
      "rver_type\030\001 \001(\005\022\025\n\rsrc_server_id\030\002 \001(\005\022\027" +
      "\n\017dst_server_type\030\003 \001(\005\022\025\n\rdst_server_id" +
      "\030\004 \001(\005\022\026\n\016dst_game_group\030\005 \001(\005\022\027\n\017dst_ma" +
      "tch_group\030\006 \001(\005B0\n\032com.poker.protocols.s" +
      "erverB\022DispatchChainProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_poker_protocols_server_proto_DispatchChain_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_poker_protocols_server_proto_DispatchChain_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_poker_protocols_server_proto_DispatchChain_descriptor,
              new java.lang.String[] { "SrcServerType", "SrcServerId", "DstServerType", "DstServerId", "DstGameGroup", "DstMatchGroup", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
