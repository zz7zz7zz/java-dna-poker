// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/com/poker/protocols/server/proto/DispatchPacket.proto

package com.poker.protocols.server;

public final class DispatchPacketProto {
  private DispatchPacketProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DispatchPacketOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 sequenceId = 1;
    /**
     * <code>required int32 sequenceId = 1;</code>
     */
    boolean hasSequenceId();
    /**
     * <code>required int32 sequenceId = 1;</code>
     */
    int getSequenceId();

    // required bytes data = 2;
    /**
     * <code>required bytes data = 2;</code>
     */
    boolean hasData();
    /**
     * <code>required bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();

    // repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;
    /**
     * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
     */
    java.util.List<com.poker.protocols.server.DispatchChainProto.DispatchChain> 
        getDispatchChainListList();
    /**
     * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
     */
    com.poker.protocols.server.DispatchChainProto.DispatchChain getDispatchChainList(int index);
    /**
     * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
     */
    int getDispatchChainListCount();
    /**
     * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
     */
    java.util.List<? extends com.poker.protocols.server.DispatchChainProto.DispatchChainOrBuilder> 
        getDispatchChainListOrBuilderList();
    /**
     * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
     */
    com.poker.protocols.server.DispatchChainProto.DispatchChainOrBuilder getDispatchChainListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.poker.protocols.server.proto.DispatchPacket}
   */
  public static final class DispatchPacket extends
      com.google.protobuf.GeneratedMessage
      implements DispatchPacketOrBuilder {
    // Use DispatchPacket.newBuilder() to construct.
    private DispatchPacket(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DispatchPacket(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DispatchPacket defaultInstance;
    public static DispatchPacket getDefaultInstance() {
      return defaultInstance;
    }

    public DispatchPacket getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DispatchPacket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sequenceId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              data_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                dispatchChainList_ = new java.util.ArrayList<com.poker.protocols.server.DispatchChainProto.DispatchChain>();
                mutable_bitField0_ |= 0x00000004;
              }
              dispatchChainList_.add(input.readMessage(com.poker.protocols.server.DispatchChainProto.DispatchChain.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          dispatchChainList_ = java.util.Collections.unmodifiableList(dispatchChainList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.poker.protocols.server.DispatchPacketProto.internal_static_com_poker_protocols_server_proto_DispatchPacket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.poker.protocols.server.DispatchPacketProto.internal_static_com_poker_protocols_server_proto_DispatchPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.poker.protocols.server.DispatchPacketProto.DispatchPacket.class, com.poker.protocols.server.DispatchPacketProto.DispatchPacket.Builder.class);
    }

    public static com.google.protobuf.Parser<DispatchPacket> PARSER =
        new com.google.protobuf.AbstractParser<DispatchPacket>() {
      public DispatchPacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DispatchPacket(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DispatchPacket> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 sequenceId = 1;
    public static final int SEQUENCEID_FIELD_NUMBER = 1;
    private int sequenceId_;
    /**
     * <code>required int32 sequenceId = 1;</code>
     */
    public boolean hasSequenceId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 sequenceId = 1;</code>
     */
    public int getSequenceId() {
      return sequenceId_;
    }

    // required bytes data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes data = 2;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    // repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;
    public static final int DISPATCHCHAINLIST_FIELD_NUMBER = 3;
    private java.util.List<com.poker.protocols.server.DispatchChainProto.DispatchChain> dispatchChainList_;
    /**
     * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
     */
    public java.util.List<com.poker.protocols.server.DispatchChainProto.DispatchChain> getDispatchChainListList() {
      return dispatchChainList_;
    }
    /**
     * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
     */
    public java.util.List<? extends com.poker.protocols.server.DispatchChainProto.DispatchChainOrBuilder> 
        getDispatchChainListOrBuilderList() {
      return dispatchChainList_;
    }
    /**
     * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
     */
    public int getDispatchChainListCount() {
      return dispatchChainList_.size();
    }
    /**
     * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
     */
    public com.poker.protocols.server.DispatchChainProto.DispatchChain getDispatchChainList(int index) {
      return dispatchChainList_.get(index);
    }
    /**
     * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
     */
    public com.poker.protocols.server.DispatchChainProto.DispatchChainOrBuilder getDispatchChainListOrBuilder(
        int index) {
      return dispatchChainList_.get(index);
    }

    private void initFields() {
      sequenceId_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
      dispatchChainList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSequenceId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDispatchChainListCount(); i++) {
        if (!getDispatchChainList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, sequenceId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, data_);
      }
      for (int i = 0; i < dispatchChainList_.size(); i++) {
        output.writeMessage(3, dispatchChainList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sequenceId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      for (int i = 0; i < dispatchChainList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, dispatchChainList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.poker.protocols.server.DispatchPacketProto.DispatchPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.poker.protocols.server.DispatchPacketProto.DispatchPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.poker.protocols.server.DispatchPacketProto.DispatchPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.poker.protocols.server.DispatchPacketProto.DispatchPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.poker.protocols.server.DispatchPacketProto.DispatchPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.poker.protocols.server.DispatchPacketProto.DispatchPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.poker.protocols.server.DispatchPacketProto.DispatchPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.poker.protocols.server.DispatchPacketProto.DispatchPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.poker.protocols.server.DispatchPacketProto.DispatchPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.poker.protocols.server.DispatchPacketProto.DispatchPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.poker.protocols.server.DispatchPacketProto.DispatchPacket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.poker.protocols.server.proto.DispatchPacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.poker.protocols.server.DispatchPacketProto.DispatchPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.poker.protocols.server.DispatchPacketProto.internal_static_com_poker_protocols_server_proto_DispatchPacket_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.poker.protocols.server.DispatchPacketProto.internal_static_com_poker_protocols_server_proto_DispatchPacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.poker.protocols.server.DispatchPacketProto.DispatchPacket.class, com.poker.protocols.server.DispatchPacketProto.DispatchPacket.Builder.class);
      }

      // Construct using com.poker.protocols.server.DispatchPacketProto.DispatchPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDispatchChainListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sequenceId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (dispatchChainListBuilder_ == null) {
          dispatchChainList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          dispatchChainListBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.poker.protocols.server.DispatchPacketProto.internal_static_com_poker_protocols_server_proto_DispatchPacket_descriptor;
      }

      public com.poker.protocols.server.DispatchPacketProto.DispatchPacket getDefaultInstanceForType() {
        return com.poker.protocols.server.DispatchPacketProto.DispatchPacket.getDefaultInstance();
      }

      public com.poker.protocols.server.DispatchPacketProto.DispatchPacket build() {
        com.poker.protocols.server.DispatchPacketProto.DispatchPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.poker.protocols.server.DispatchPacketProto.DispatchPacket buildPartial() {
        com.poker.protocols.server.DispatchPacketProto.DispatchPacket result = new com.poker.protocols.server.DispatchPacketProto.DispatchPacket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sequenceId_ = sequenceId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.data_ = data_;
        if (dispatchChainListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            dispatchChainList_ = java.util.Collections.unmodifiableList(dispatchChainList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.dispatchChainList_ = dispatchChainList_;
        } else {
          result.dispatchChainList_ = dispatchChainListBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.poker.protocols.server.DispatchPacketProto.DispatchPacket) {
          return mergeFrom((com.poker.protocols.server.DispatchPacketProto.DispatchPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.poker.protocols.server.DispatchPacketProto.DispatchPacket other) {
        if (other == com.poker.protocols.server.DispatchPacketProto.DispatchPacket.getDefaultInstance()) return this;
        if (other.hasSequenceId()) {
          setSequenceId(other.getSequenceId());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (dispatchChainListBuilder_ == null) {
          if (!other.dispatchChainList_.isEmpty()) {
            if (dispatchChainList_.isEmpty()) {
              dispatchChainList_ = other.dispatchChainList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDispatchChainListIsMutable();
              dispatchChainList_.addAll(other.dispatchChainList_);
            }
            onChanged();
          }
        } else {
          if (!other.dispatchChainList_.isEmpty()) {
            if (dispatchChainListBuilder_.isEmpty()) {
              dispatchChainListBuilder_.dispose();
              dispatchChainListBuilder_ = null;
              dispatchChainList_ = other.dispatchChainList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              dispatchChainListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDispatchChainListFieldBuilder() : null;
            } else {
              dispatchChainListBuilder_.addAllMessages(other.dispatchChainList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSequenceId()) {
          
          return false;
        }
        if (!hasData()) {
          
          return false;
        }
        for (int i = 0; i < getDispatchChainListCount(); i++) {
          if (!getDispatchChainList(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.poker.protocols.server.DispatchPacketProto.DispatchPacket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.poker.protocols.server.DispatchPacketProto.DispatchPacket) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 sequenceId = 1;
      private int sequenceId_ ;
      /**
       * <code>required int32 sequenceId = 1;</code>
       */
      public boolean hasSequenceId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 sequenceId = 1;</code>
       */
      public int getSequenceId() {
        return sequenceId_;
      }
      /**
       * <code>required int32 sequenceId = 1;</code>
       */
      public Builder setSequenceId(int value) {
        bitField0_ |= 0x00000001;
        sequenceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sequenceId = 1;</code>
       */
      public Builder clearSequenceId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sequenceId_ = 0;
        onChanged();
        return this;
      }

      // required bytes data = 2;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes data = 2;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes data = 2;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;
      private java.util.List<com.poker.protocols.server.DispatchChainProto.DispatchChain> dispatchChainList_ =
        java.util.Collections.emptyList();
      private void ensureDispatchChainListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          dispatchChainList_ = new java.util.ArrayList<com.poker.protocols.server.DispatchChainProto.DispatchChain>(dispatchChainList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.poker.protocols.server.DispatchChainProto.DispatchChain, com.poker.protocols.server.DispatchChainProto.DispatchChain.Builder, com.poker.protocols.server.DispatchChainProto.DispatchChainOrBuilder> dispatchChainListBuilder_;

      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public java.util.List<com.poker.protocols.server.DispatchChainProto.DispatchChain> getDispatchChainListList() {
        if (dispatchChainListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dispatchChainList_);
        } else {
          return dispatchChainListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public int getDispatchChainListCount() {
        if (dispatchChainListBuilder_ == null) {
          return dispatchChainList_.size();
        } else {
          return dispatchChainListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public com.poker.protocols.server.DispatchChainProto.DispatchChain getDispatchChainList(int index) {
        if (dispatchChainListBuilder_ == null) {
          return dispatchChainList_.get(index);
        } else {
          return dispatchChainListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public Builder setDispatchChainList(
          int index, com.poker.protocols.server.DispatchChainProto.DispatchChain value) {
        if (dispatchChainListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDispatchChainListIsMutable();
          dispatchChainList_.set(index, value);
          onChanged();
        } else {
          dispatchChainListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public Builder setDispatchChainList(
          int index, com.poker.protocols.server.DispatchChainProto.DispatchChain.Builder builderForValue) {
        if (dispatchChainListBuilder_ == null) {
          ensureDispatchChainListIsMutable();
          dispatchChainList_.set(index, builderForValue.build());
          onChanged();
        } else {
          dispatchChainListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public Builder addDispatchChainList(com.poker.protocols.server.DispatchChainProto.DispatchChain value) {
        if (dispatchChainListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDispatchChainListIsMutable();
          dispatchChainList_.add(value);
          onChanged();
        } else {
          dispatchChainListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public Builder addDispatchChainList(
          int index, com.poker.protocols.server.DispatchChainProto.DispatchChain value) {
        if (dispatchChainListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDispatchChainListIsMutable();
          dispatchChainList_.add(index, value);
          onChanged();
        } else {
          dispatchChainListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public Builder addDispatchChainList(
          com.poker.protocols.server.DispatchChainProto.DispatchChain.Builder builderForValue) {
        if (dispatchChainListBuilder_ == null) {
          ensureDispatchChainListIsMutable();
          dispatchChainList_.add(builderForValue.build());
          onChanged();
        } else {
          dispatchChainListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public Builder addDispatchChainList(
          int index, com.poker.protocols.server.DispatchChainProto.DispatchChain.Builder builderForValue) {
        if (dispatchChainListBuilder_ == null) {
          ensureDispatchChainListIsMutable();
          dispatchChainList_.add(index, builderForValue.build());
          onChanged();
        } else {
          dispatchChainListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public Builder addAllDispatchChainList(
          java.lang.Iterable<? extends com.poker.protocols.server.DispatchChainProto.DispatchChain> values) {
        if (dispatchChainListBuilder_ == null) {
          ensureDispatchChainListIsMutable();
          super.addAll(values, dispatchChainList_);
          onChanged();
        } else {
          dispatchChainListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public Builder clearDispatchChainList() {
        if (dispatchChainListBuilder_ == null) {
          dispatchChainList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          dispatchChainListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public Builder removeDispatchChainList(int index) {
        if (dispatchChainListBuilder_ == null) {
          ensureDispatchChainListIsMutable();
          dispatchChainList_.remove(index);
          onChanged();
        } else {
          dispatchChainListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public com.poker.protocols.server.DispatchChainProto.DispatchChain.Builder getDispatchChainListBuilder(
          int index) {
        return getDispatchChainListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public com.poker.protocols.server.DispatchChainProto.DispatchChainOrBuilder getDispatchChainListOrBuilder(
          int index) {
        if (dispatchChainListBuilder_ == null) {
          return dispatchChainList_.get(index);  } else {
          return dispatchChainListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public java.util.List<? extends com.poker.protocols.server.DispatchChainProto.DispatchChainOrBuilder> 
           getDispatchChainListOrBuilderList() {
        if (dispatchChainListBuilder_ != null) {
          return dispatchChainListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dispatchChainList_);
        }
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public com.poker.protocols.server.DispatchChainProto.DispatchChain.Builder addDispatchChainListBuilder() {
        return getDispatchChainListFieldBuilder().addBuilder(
            com.poker.protocols.server.DispatchChainProto.DispatchChain.getDefaultInstance());
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public com.poker.protocols.server.DispatchChainProto.DispatchChain.Builder addDispatchChainListBuilder(
          int index) {
        return getDispatchChainListFieldBuilder().addBuilder(
            index, com.poker.protocols.server.DispatchChainProto.DispatchChain.getDefaultInstance());
      }
      /**
       * <code>repeated .com.poker.protocols.server.proto.DispatchChain dispatchChainList = 3;</code>
       */
      public java.util.List<com.poker.protocols.server.DispatchChainProto.DispatchChain.Builder> 
           getDispatchChainListBuilderList() {
        return getDispatchChainListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.poker.protocols.server.DispatchChainProto.DispatchChain, com.poker.protocols.server.DispatchChainProto.DispatchChain.Builder, com.poker.protocols.server.DispatchChainProto.DispatchChainOrBuilder> 
          getDispatchChainListFieldBuilder() {
        if (dispatchChainListBuilder_ == null) {
          dispatchChainListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.poker.protocols.server.DispatchChainProto.DispatchChain, com.poker.protocols.server.DispatchChainProto.DispatchChain.Builder, com.poker.protocols.server.DispatchChainProto.DispatchChainOrBuilder>(
                  dispatchChainList_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          dispatchChainList_ = null;
        }
        return dispatchChainListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.poker.protocols.server.proto.DispatchPacket)
    }

    static {
      defaultInstance = new DispatchPacket(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.poker.protocols.server.proto.DispatchPacket)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_poker_protocols_server_proto_DispatchPacket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_poker_protocols_server_proto_DispatchPacket_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n9src/com/poker/protocols/server/proto/D" +
      "ispatchPacket.proto\022 com.poker.protocols" +
      ".server.proto\0328src/com/poker/protocols/s" +
      "erver/proto/DispatchChain.proto\"~\n\016Dispa" +
      "tchPacket\022\022\n\nsequenceId\030\001 \002(\005\022\014\n\004data\030\002 " +
      "\002(\014\022J\n\021dispatchChainList\030\003 \003(\0132/.com.pok" +
      "er.protocols.server.proto.DispatchChainB" +
      "1\n\032com.poker.protocols.serverB\023DispatchP" +
      "acketProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_poker_protocols_server_proto_DispatchPacket_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_poker_protocols_server_proto_DispatchPacket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_poker_protocols_server_proto_DispatchPacket_descriptor,
              new java.lang.String[] { "SequenceId", "Data", "DispatchChainList", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.poker.protocols.server.DispatchChainProto.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
